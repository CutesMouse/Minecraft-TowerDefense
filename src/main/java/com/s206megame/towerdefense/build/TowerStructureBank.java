package com.s206megame.towerdefense.build;

import com.s206megame.towerdefense.tower.basic.Tower;
import org.bukkit.Material;
import org.bukkit.block.BlockFace;
import org.bukkit.block.data.Bisected;
import org.bukkit.block.data.type.Stairs;

public class TowerStructureBank {

    public static TowerStructure getStructure(int level, String className) {
        switch (className) {
            case "DariusTower": {
                switch (level) {
                    case 1:
                        return DariusTower();
                }
            }
            case "ArcherTower": {
                switch (level) {
                    case 1:
                        return LV1ArcherTower();
                    case 2:
                        return LV2ArcherTower();
                    case 3:
                        return LV3ArcherTower();
                }
            }
            case "FireTower": {
                switch (level) {
                    case 1:
                        return LV1FireTower();
                    case 2:
                        return LV2FireTower();
                    case 3:
                        return LV3FireTower();
                }
            }
            case "PotionTower": {
                switch (level) {
                    case 1:
                        return LV1PotionTower();
                    case 2:
                        return LV2PotionTower();
                    case 3:
                        return LV3PotionTower();
                }
            }
            case "SnowballTower": {
                switch (level) {
                    case 1:
                        return LV1SnowballTower();
                    case 2:
                        return LV2SnowballTower();
                    case 3:
                        return LV3SnowballTower();
                }
            }
            case "ExplosionTower": {
                switch (level) {
                    case 1:
                        return LV1ExplosionTower();
                    case 2:
                        return LV2ExplosionTower();
                    case 3:
                        return LV3ExplosionTower();
                }
            }
            case "MinigunTower": {
                switch (level) {
                    case 1:
                        return LV1MinigunTower();
                    case 2:
                        return LV2MinigunTower();
                    case 3:
                        return LV3MinigunTower();
                }
            }
            case "LongbowTower": {
                switch (level) {
                    case 1:
                        return LV1LongbowTower();
                    case 2:
                        return LV2LongbowTower();
                    case 3:
                        return LV3LongbowTower();
                }
            }
            case "CrossbowTower": {
                switch (level) {
                    case 1:
                        return LV1CrossbowTower();
                    case 2:
                        return LV2CrossbowTower();
                    case 3:
                        return LV3CrossbowTower();
                }
            }
            case "SniperTower": {
                switch (level) {
                    case 1:
                        return LV1SniperTower();
                    case 2:
                        return LV2SniperTower();
                    case 3:
                        return LV3SniperTower();
                }
            }
        }
        return null;
    }

    public static TowerStructure getStructure(int level, Class<? extends Tower> tower) {
        return getStructure(level, tower.getSimpleName());
    }

    private static TowerStructure LV1ArcherTower;
    private static TowerStructure LV1ArcherTower() {
        if (LV1ArcherTower != null) return LV1ArcherTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-1, 1, -1, Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1, 1, 0, Material.PETRIFIED_OAK_SLAB));
        structure.register(new SolidBlockElement(-1, 1, 1, Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1, 2, -1, Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1, 2, 0, Material.OAK_FENCE));
        structure.register(new SolidBlockElement(-1, 2, 1, Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1, 3, -1, Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1, 3, 0, Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1, 3, 1, Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1, 4, -1, Material.PETRIFIED_OAK_SLAB));
        structure.register(new StairsBlockElement(-1, 4, 0, Material.OAK_STAIRS, BlockFace.EAST, Bisected.Half.BOTTOM, Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(-1, 4, 1, Material.PETRIFIED_OAK_SLAB));
        structure.register(new StairsBlockElement(-1, 5, -1, Material.OAK_STAIRS, BlockFace.SOUTH, Bisected.Half.TOP, Stairs.Shape.OUTER_LEFT));
        structure.register(new StairsBlockElement(-1, 5, 0, Material.OAK_STAIRS, BlockFace.EAST, Bisected.Half.TOP, Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(-1, 5, 1, Material.OAK_STAIRS, BlockFace.NORTH, Bisected.Half.TOP, Stairs.Shape.OUTER_RIGHT));
        structure.register(new StairsBlockElement(-1, 6, 0, Material.OAK_STAIRS, BlockFace.EAST, Bisected.Half.BOTTOM, Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0, 1, -1, Material.PETRIFIED_OAK_SLAB));
        structure.register(new SolidBlockElement(0, 1, 0, Material.PETRIFIED_OAK_SLAB));
        structure.register(new SolidBlockElement(0, 1, 1, Material.PETRIFIED_OAK_SLAB));
        structure.register(new SolidBlockElement(0, 2, -1, Material.OAK_FENCE));
        structure.register(new SolidBlockElement(0, 2, 1, Material.OAK_FENCE));
        structure.register(new SolidBlockElement(0, 3, -1, Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0, 3, 1, Material.COBBLESTONE));
        structure.register(new StairsBlockElement(0, 4, -1, Material.OAK_STAIRS, BlockFace.SOUTH, Bisected.Half.BOTTOM, Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0, 4, 0, Material.PETRIFIED_OAK_SLAB));
        structure.register(new StairsBlockElement(0, 4, 1, Material.OAK_STAIRS, BlockFace.NORTH, Bisected.Half.BOTTOM, Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(0, 5, -1, Material.OAK_STAIRS, BlockFace.SOUTH, Bisected.Half.TOP, Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(0, 5, 1, Material.OAK_STAIRS, BlockFace.NORTH, Bisected.Half.TOP, Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(0, 6, -1, Material.OAK_STAIRS, BlockFace.SOUTH, Bisected.Half.BOTTOM, Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0, 6, 0, Material.OAK_PLANKS));
        structure.register(new StairsBlockElement(0, 6, 1, Material.OAK_STAIRS, BlockFace.NORTH, Bisected.Half.BOTTOM, Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(1, 1, -1, Material.OAK_LOG));
        structure.register(new SolidBlockElement(1, 1, 0, Material.PETRIFIED_OAK_SLAB));
        structure.register(new SolidBlockElement(1, 1, 1, Material.OAK_LOG));
        structure.register(new SolidBlockElement(1, 2, -1, Material.OAK_LOG));
        structure.register(new SolidBlockElement(1, 2, 0, Material.OAK_FENCE));
        structure.register(new SolidBlockElement(1, 2, 1, Material.OAK_LOG));
        structure.register(new SolidBlockElement(1, 3, -1, Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1, 3, 0, Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1, 3, 1, Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1, 4, -1, Material.PETRIFIED_OAK_SLAB));
        structure.register(new StairsBlockElement(1, 4, 0, Material.OAK_STAIRS, BlockFace.WEST, Bisected.Half.BOTTOM, Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(1, 4, 1, Material.PETRIFIED_OAK_SLAB));
        structure.register(new StairsBlockElement(1, 5, -1, Material.OAK_STAIRS, BlockFace.SOUTH, Bisected.Half.TOP, Stairs.Shape.OUTER_RIGHT));
        structure.register(new StairsBlockElement(1, 5, 0, Material.OAK_STAIRS, BlockFace.WEST, Bisected.Half.TOP, Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(1, 5, 1, Material.OAK_STAIRS, BlockFace.NORTH, Bisected.Half.TOP, Stairs.Shape.OUTER_LEFT));
        structure.register(new StairsBlockElement(1, 6, 0, Material.OAK_STAIRS, BlockFace.WEST, Bisected.Half.BOTTOM, Stairs.Shape.STRAIGHT));
        LV1ArcherTower = structure;
        return structure;
    }

    private static TowerStructure LV2ArcherTower;
    private static TowerStructure LV2ArcherTower() {
        if (LV2ArcherTower != null) return LV2ArcherTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-1,1,-1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1,1,0,Material.COBBLESTONE_WALL));
        structure.register(new SolidBlockElement(-1,1,1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1,2,-1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1,2,0,Material.COBBLESTONE_WALL));
        structure.register(new SolidBlockElement(-1,2,1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1,3,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,3,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,3,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,4,-1,Material.PETRIFIED_OAK_SLAB));
        structure.register(new StairsBlockElement(-1,4,0,Material.OAK_STAIRS,BlockFace.EAST,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(-1,4,1,Material.OAK_PLANKS));
        structure.register(new StairsBlockElement(-1,5,-1,Material.OAK_STAIRS,BlockFace.SOUTH,Bisected.Half.TOP,Stairs.Shape.OUTER_LEFT));
        structure.register(new StairsBlockElement(-1,5,0,Material.OAK_STAIRS,BlockFace.EAST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(-1,5,1,Material.OAK_STAIRS,BlockFace.NORTH,Bisected.Half.TOP,Stairs.Shape.OUTER_RIGHT));
        structure.register(new StairsBlockElement(-1,6,0,Material.OAK_STAIRS,BlockFace.EAST,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0,1,-1,Material.COBBLESTONE_WALL));
        structure.register(new SolidBlockElement(0,1,1,Material.COBBLESTONE_WALL));
        structure.register(new SolidBlockElement(0,2,-1,Material.COBBLESTONE_WALL));
        structure.register(new SolidBlockElement(0,2,1,Material.COBBLESTONE_WALL));
        structure.register(new SolidBlockElement(0,3,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,3,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,3,1,Material.POLISHED_ANDESITE));
        structure.register(new StairsBlockElement(0,4,-1,Material.OAK_STAIRS,BlockFace.SOUTH,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0,4,0,Material.POLISHED_ANDESITE));
        structure.register(new StairsBlockElement(0,4,1,Material.OAK_STAIRS,BlockFace.NORTH,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(0,5,-1,Material.OAK_STAIRS,BlockFace.SOUTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(0,5,1,Material.OAK_STAIRS,BlockFace.NORTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(0,6,-1,Material.OAK_STAIRS,BlockFace.SOUTH,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0,6,0,Material.OAK_PLANKS));
        structure.register(new StairsBlockElement(0,6,1,Material.OAK_STAIRS,BlockFace.NORTH,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(1,1,-1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(1,1,0,Material.COBBLESTONE_WALL));
        structure.register(new SolidBlockElement(1,1,1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(1,2,-1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(1,2,0,Material.COBBLESTONE_WALL));
        structure.register(new SolidBlockElement(1,2,1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(1,3,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,3,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,3,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,4,-1,Material.PETRIFIED_OAK_SLAB));
        structure.register(new StairsBlockElement(1,4,0,Material.OAK_STAIRS,BlockFace.WEST,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(1,4,1,Material.PETRIFIED_OAK_SLAB));
        structure.register(new StairsBlockElement(1,5,-1,Material.OAK_STAIRS,BlockFace.SOUTH,Bisected.Half.TOP,Stairs.Shape.OUTER_RIGHT));
        structure.register(new StairsBlockElement(1,5,0,Material.OAK_STAIRS,BlockFace.WEST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(1,5,1,Material.OAK_STAIRS,BlockFace.NORTH,Bisected.Half.TOP,Stairs.Shape.OUTER_LEFT));
        structure.register(new StairsBlockElement(1,6,0,Material.OAK_STAIRS,BlockFace.WEST,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        LV2ArcherTower = structure;
        return structure;
    }

    private static TowerStructure LV3ArcherTower;
    private static TowerStructure LV3ArcherTower() {
        if (LV3ArcherTower != null) return LV3ArcherTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-1,1,-1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(-1,1,0,Material.MOSSY_COBBLESTONE));
        structure.register(new SolidBlockElement(-1,1,1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(-1,2,-1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new StairsBlockElement(-1,2,0,Material.POLISHED_ANDESITE_STAIRS,BlockFace.EAST,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(-1,2,1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(-1,3,-1,Material.POLISHED_ANDESITE));
        structure.register(new StairsBlockElement(-1,3,0,Material.POLISHED_ANDESITE_STAIRS,BlockFace.EAST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(-1,3,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,4,-1,Material.COBWEB));
        structure.register(new StairsBlockElement(-1,4,0,Material.POLISHED_ANDESITE_STAIRS,BlockFace.EAST,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(-1,4,1,Material.STONE_BRICK_SLAB));
        structure.register(new StairsBlockElement(-1,5,-1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.EAST,Bisected.Half.TOP,Stairs.Shape.OUTER_RIGHT));
        structure.register(new StairsBlockElement(-1,5,0,Material.POLISHED_ANDESITE_STAIRS,BlockFace.EAST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(-1,5,1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.EAST,Bisected.Half.TOP,Stairs.Shape.OUTER_LEFT));
        structure.register(new SolidBlockElement(-1,6,-1,Material.STONE_BRICK_SLAB));
        structure.register(new StairsBlockElement(-1,6,0,Material.POLISHED_ANDESITE_STAIRS,BlockFace.EAST,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(-1,6,1,Material.COBWEB));
        structure.register(new SolidBlockElement(0,1,-1,Material.MOSSY_COBBLESTONE));
        structure.register(new SolidBlockElement(0,1,0,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(0,1,1,Material.MOSSY_COBBLESTONE));
        structure.register(new StairsBlockElement(0,2,-1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.SOUTH,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0,2,0,Material.OAK_PLANKS));
        structure.register(new StairsBlockElement(0,2,1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.NORTH,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(0,3,-1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.SOUTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0,3,0,Material.OAK_PLANKS));
        structure.register(new StairsBlockElement(0,3,1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.NORTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(0,4,-1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.SOUTH,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0,4,0,Material.OAK_LOG));
        structure.register(new StairsBlockElement(0,4,1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.NORTH,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(0,5,-1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.SOUTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0,5,0,Material.OAK_LOG));
        structure.register(new StairsBlockElement(0,5,1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.NORTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(0,6,-1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.SOUTH,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0,6,0,Material.POLISHED_ANDESITE));
        structure.register(new StairsBlockElement(0,6,1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.NORTH,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(1,1,-1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(1,1,0,Material.MOSSY_COBBLESTONE));
        structure.register(new SolidBlockElement(1,1,1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(1,2,-1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new StairsBlockElement(1,2,0,Material.POLISHED_ANDESITE_STAIRS,BlockFace.WEST,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(1,2,1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(1,3,-1,Material.POLISHED_ANDESITE));
        structure.register(new StairsBlockElement(1,3,0,Material.POLISHED_ANDESITE_STAIRS,BlockFace.WEST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(1,3,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,4,-1,Material.COBWEB));
        structure.register(new StairsBlockElement(1,4,0,Material.POLISHED_ANDESITE_STAIRS,BlockFace.WEST,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(1,4,1,Material.STONE_BRICK_SLAB));
        structure.register(new StairsBlockElement(1,5,-1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.SOUTH,Bisected.Half.TOP,Stairs.Shape.OUTER_RIGHT));
        structure.register(new StairsBlockElement(1,5,0,Material.POLISHED_ANDESITE_STAIRS,BlockFace.WEST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(1,5,1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.WEST,Bisected.Half.TOP,Stairs.Shape.OUTER_RIGHT));
        structure.register(new SolidBlockElement(1,6,-1,Material.COBWEB));
        structure.register(new StairsBlockElement(1,6,0,Material.POLISHED_ANDESITE_STAIRS,BlockFace.WEST,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(1,6,1,Material.STONE_BRICK_SLAB));
        LV3ArcherTower = structure;
        return structure;
    }

    private static TowerStructure DariusTower;
    private static TowerStructure DariusTower() {
        if (DariusTower != null) return DariusTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new StairsBlockElement(-1, 1, -1, Material.JUNGLE_STAIRS, BlockFace.SOUTH, Bisected.Half.BOTTOM, Stairs.Shape.OUTER_LEFT));
        structure.register(new StairsBlockElement(-1, 1, 0, Material.JUNGLE_STAIRS, BlockFace.EAST, Bisected.Half.BOTTOM, Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(-1, 1, 1, Material.JUNGLE_STAIRS, BlockFace.EAST, Bisected.Half.BOTTOM, Stairs.Shape.OUTER_LEFT));
        structure.register(new SolidBlockElement(-1, 4, 0, Material.COBBLESTONE_WALL));
        structure.register(new DirectionalBlockElement(-1, 5, 0, Material.HOPPER, BlockFace.EAST));
        structure.register(new StairsBlockElement(-1, 7, 0, Material.POLISHED_ANDESITE_STAIRS, BlockFace.EAST, Bisected.Half.TOP, Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(0, 1, -1, Material.JUNGLE_STAIRS, BlockFace.SOUTH, Bisected.Half.BOTTOM, Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0, 1, 0, Material.POLISHED_ANDESITE));
        structure.register(new StairsBlockElement(0, 1, 1, Material.JUNGLE_STAIRS, BlockFace.NORTH, Bisected.Half.BOTTOM, Stairs.Shape.STRAIGHT));
        structure.register(new DirectionalBlockElement(0, 2, 0, Material.ANVIL, BlockFace.WEST));
        structure.register(new SolidBlockElement(0, 3, 0, Material.CAULDRON));
        structure.register(new DirectionalBlockElement(0, 4, 0, Material.HOPPER, BlockFace.DOWN));
        structure.register(new DirectionalBlockElement(0, 5, 0, Material.DROPPER, BlockFace.SOUTH));
        structure.register(new DirectionalBlockElement(0, 6, 0, Material.OBSERVER, BlockFace.NORTH));
        structure.register(new StairsBlockElement(0, 7, -1, Material.POLISHED_ANDESITE_STAIRS, BlockFace.SOUTH, Bisected.Half.TOP, Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0, 7, 0, Material.POLISHED_ANDESITE));
        structure.register(new StairsBlockElement(0, 7, 1, Material.POLISHED_ANDESITE_STAIRS, BlockFace.NORTH, Bisected.Half.TOP, Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(1, 1, -1, Material.JUNGLE_STAIRS, BlockFace.WEST, Bisected.Half.BOTTOM, Stairs.Shape.OUTER_LEFT));
        structure.register(new StairsBlockElement(1, 1, 0, Material.JUNGLE_STAIRS, BlockFace.WEST, Bisected.Half.BOTTOM, Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(1, 1, 1, Material.JUNGLE_STAIRS, BlockFace.NORTH, Bisected.Half.BOTTOM, Stairs.Shape.OUTER_LEFT));
        structure.register(new SolidBlockElement(1, 3, -1, Material.SPRUCE_FENCE));
        structure.register(new SolidBlockElement(1, 4, -1, Material.COBBLESTONE_WALL));
        structure.register(new SolidBlockElement(1, 4, 0, Material.COBBLESTONE_WALL));
        structure.register(new SolidBlockElement(1, 5, -1, Material.SPRUCE_FENCE));
        structure.register(new DirectionalBlockElement(1, 5, 0, Material.HOPPER, BlockFace.WEST));
        structure.register(new DirectionalBlockElement(1, 6, -1, Material.ANVIL, BlockFace.NORTH));
        structure.register(new StairsBlockElement(1, 7, 0, Material.POLISHED_ANDESITE_STAIRS, BlockFace.WEST, Bisected.Half.TOP, Stairs.Shape.STRAIGHT));
        DariusTower = structure;
        return structure;
    }

    private static TowerStructure LV1SnowballTower;
    private static TowerStructure LV1SnowballTower() {
        if (LV1SnowballTower != null) return LV1SnowballTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-1, 1, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 1, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(-1, 1, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 2, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 2, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(-1, 2, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 3, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 3, 0, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(-1, 3, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 5, 0, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 6, 0, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(0, 1, -1, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 1, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 1, 1, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 2, -1, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 2, 0, Material.SNOW_BLOCK));
        structure.register(new SolidBlockElement(0, 2, 1, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 3, -1, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(0, 3, 0, Material.SNOW_BLOCK));
        structure.register(new SolidBlockElement(0, 3, 1, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(0, 4, 0, Material.SNOW_BLOCK));
        structure.register(new SolidBlockElement(0, 5, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(0, 5, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 5, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(0, 6, -1, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(0, 6, 0, Material.SNOW_BLOCK));
        structure.register(new SolidBlockElement(0, 6, 1, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(1, 1, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 1, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(1, 1, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 2, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 2, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(1, 2, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 3, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 3, 0, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(1, 3, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 5, 0, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 6, 0, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        LV1SnowballTower = structure;
        return structure;
    }

    private static TowerStructure LV2SnowballTower;
    private static TowerStructure LV2SnowballTower() {
        if (LV2SnowballTower != null) return LV2SnowballTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-1, 1, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 1, 0, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 1, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 2, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 2, 0, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(-1, 2, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 3, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 3, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 4, -1, Material.SMOOTH_QUARTZ_SLAB));
        structure.register(new SolidBlockElement(-1, 4, 0, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 4, 1, Material.SMOOTH_QUARTZ_SLAB));
        structure.register(new SolidBlockElement(-1, 5, 0, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 6, 0, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(-1, 7, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 1, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(0, 1, 0, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(0, 1, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(0, 2, -1, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(0, 2, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 2, 1, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(0, 3, -1, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(0, 3, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 3, 1, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(0, 4, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(0, 4, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 4, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(0, 5, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(0, 5, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 5, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(0, 6, -1, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(0, 6, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 6, 1, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(0, 7, -1, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 7, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 7, 1, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 8, 0, Material.SNOW_BLOCK));
        structure.register(new SolidBlockElement(1, 1, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 1, 0, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 1, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 2, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 2, 0, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(1, 2, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 3, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 3, 0, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(1, 3, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 4, -1, Material.SMOOTH_QUARTZ_SLAB));
        structure.register(new SolidBlockElement(1, 4, 0, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 4, 1, Material.SMOOTH_QUARTZ_SLAB));
        structure.register(new SolidBlockElement(1, 5, 0, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 6, 0, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(1, 7, 0, Material.SMOOTH_QUARTZ));
        LV2SnowballTower = structure;
        return structure;
    }

    private static TowerStructure LV3SnowballTower;
    private static TowerStructure LV3SnowballTower() {
        if (LV3SnowballTower != null) return LV3SnowballTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-1, 1, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 1, 0, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 1, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 2, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 2, 0, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(-1, 2, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 3, -1, Material.LIGHT_BLUE_STAINED_GLASS));
        structure.register(new SolidBlockElement(-1, 3, 0, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(-1, 3, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 4, -1, Material.SMOOTH_QUARTZ_SLAB));
        structure.register(new SolidBlockElement(-1, 4, 0, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 4, 1, Material.SMOOTH_QUARTZ_SLAB));
        structure.register(new SolidBlockElement(-1, 5, 0, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(-1, 6, 0, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(-1, 7, 0, Material.DIAMOND_BLOCK));
        structure.register(new SolidBlockElement(0, 1, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(0, 1, 0, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(0, 1, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(0, 2, -1, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(0, 2, 0, Material.DIAMOND_BLOCK));
        structure.register(new SolidBlockElement(0, 2, 1, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(0, 3, -1, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(0, 3, 0, Material.DIAMOND_BLOCK));
        structure.register(new SolidBlockElement(0, 3, 1, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(0, 4, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(0, 4, 0, Material.DIAMOND_BLOCK));
        structure.register(new SolidBlockElement(0, 4, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(0, 5, -1, Material.LIGHT_BLUE_STAINED_GLASS));
        structure.register(new SolidBlockElement(0, 5, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 5, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(0, 6, -1, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(0, 6, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 6, 1, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(0, 7, -1, Material.DIAMOND_BLOCK));
        structure.register(new SolidBlockElement(0, 7, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(0, 7, 1, Material.DIAMOND_BLOCK));
        structure.register(new SolidBlockElement(0, 8, 0, Material.SMOOTH_QUARTZ));
        structure.register(new SolidBlockElement(1, 1, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 1, 0, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 1, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 2, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 2, 0, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(1, 2, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 3, -1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 3, 0, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(1, 3, 1, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 4, -1, Material.SMOOTH_QUARTZ_SLAB));
        structure.register(new SolidBlockElement(1, 4, 0, Material.LIGHT_BLUE_STAINED_GLASS));
        structure.register(new SolidBlockElement(1, 4, 1, Material.SMOOTH_QUARTZ_SLAB));
        structure.register(new SolidBlockElement(1, 5, 0, Material.PACKED_ICE));
        structure.register(new SolidBlockElement(1, 6, 0, Material.LIGHT_BLUE_STAINED_GLASS_PANE));
        structure.register(new SolidBlockElement(1, 7, 0, Material.DIAMOND_BLOCK));
        LV3SnowballTower = structure;
        return structure;
    }

    private static TowerStructure LV1PotionTower;
    private static TowerStructure LV1PotionTower() {
        if (LV1PotionTower != null) return LV1PotionTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new MultipleFacingBlockElement(-1,1,-1,Material.IRON_BARS,false,true,false,true));
        structure.register(new SolidBlockElement(-1,1,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new MultipleFacingBlockElement(-1,1,1,Material.IRON_BARS,true,false,false,true));
        structure.register(new SolidBlockElement(-1,2,0,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(-1,3,0,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(-1,4,-1,Material.COBWEB));
        structure.register(new SolidBlockElement(-1,4,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(-1,5,0,Material.COBWEB));
        structure.register(new SolidBlockElement(-1,6,0,Material.COBWEB));
        structure.register(new SolidBlockElement(0,1,-1,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(0,1,0,Material.COARSE_DIRT));
        structure.register(new SolidBlockElement(0,1,1,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(0,2,-1,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(0,2,0,Material.GREEN_TERRACOTTA));
        structure.register(new SolidBlockElement(0,2,1,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(0,3,-1,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(0,3,0,Material.GREEN_TERRACOTTA));
        structure.register(new SolidBlockElement(0,3,1,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(0,4,-1,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(0,4,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(0,4,1,Material.MOSSY_STONE_BRICKS));
        structure.register(new MultipleFacingBlockElement(0,5,-1,Material.IRON_BARS,false,true,false,false));
        structure.register(new SolidBlockElement(0,5,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new MultipleFacingBlockElement(0,5,1,Material.IRON_BARS,true,false,false,false));
        structure.register(new MultipleFacingBlockElement(0,6,-1,Material.IRON_BARS,false,true,false,false));
        structure.register(new SolidBlockElement(0,6,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new MultipleFacingBlockElement(0,6,1,Material.IRON_BARS,true,false,false,false));
        structure.register(new SolidBlockElement(0,7,0,Material.COBWEB));
        structure.register(new MultipleFacingBlockElement(1,1,-1,Material.IRON_BARS,false,true,true,false));
        structure.register(new SolidBlockElement(1,1,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(1,1,1,Material.COBWEB));
        structure.register(new SolidBlockElement(1,2,0,Material.GREEN_STAINED_GLASS));
        structure.register(new MultipleFacingBlockElement(1,2,1,Material.VINE,true,false,true,false));
        structure.register(new SolidBlockElement(1,3,-1,Material.COBWEB));
        structure.register(new SolidBlockElement(1,3,0,Material.GREEN_STAINED_GLASS));
        structure.register(new MultipleFacingBlockElement(1,3,1,Material.VINE,false,false,true,false));
        structure.register(new MultipleFacingBlockElement(1,4,-1,Material.VINE,false,false,true,false));
        structure.register(new SolidBlockElement(1,4,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new MultipleFacingBlockElement(1,4,1,Material.VINE,false,false,true,false));
        structure.register(new MultipleFacingBlockElement(1,5,0,Material.VINE,false,false,true,false));
        structure.register(new SolidBlockElement(1,8,0,Material.COBWEB));
        LV1PotionTower = structure;
        return structure;
    }

    private static TowerStructure LV2PotionTower;
    private static TowerStructure LV2PotionTower() {
        if (LV2PotionTower != null) return LV2PotionTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new MultipleFacingBlockElement(-1,1,-1,Material.SPRUCE_FENCE,false,true,false,true));
        structure.register(new SolidBlockElement(-1,1,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new MultipleFacingBlockElement(-1,1,1,Material.SPRUCE_FENCE,true,false,false,true));
        structure.register(new MultipleFacingBlockElement(-1,2,-1,Material.SPRUCE_FENCE,false,true,false,true));
        structure.register(new SolidBlockElement(-1,2,0,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(-1,2,1,Material.SPRUCE_LEAVES));
        structure.register(new SolidBlockElement(-1,3,-1,Material.SPRUCE_LEAVES));
        structure.register(new SolidBlockElement(-1,3,0,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(-1,3,1,Material.SPRUCE_LEAVES));
        structure.register(new MultipleFacingBlockElement(-1,4,-1,Material.SPRUCE_FENCE,false,true,false,true));
        structure.register(new SolidBlockElement(-1,4,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new MultipleFacingBlockElement(-1,4,1,Material.SPRUCE_FENCE,true,false,false,true));
        structure.register(new SolidBlockElement(-1,5,0,Material.SPRUCE_LEAVES));
        structure.register(new SolidBlockElement(-1,6,0,Material.COBWEB));
        structure.register(new SolidBlockElement(0,1,-1,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(0,1,0,Material.COARSE_DIRT));
        structure.register(new SolidBlockElement(0,1,1,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(0,2,-1,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(0,2,0,Material.GREEN_TERRACOTTA));
        structure.register(new SolidBlockElement(0,2,1,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(0,3,-1,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(0,3,0,Material.GREEN_TERRACOTTA));
        structure.register(new SolidBlockElement(0,3,1,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(0,4,-1,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(0,4,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(0,4,1,Material.MOSSY_STONE_BRICKS));
        structure.register(new MultipleFacingBlockElement(0,5,-1,Material.IRON_BARS,false,true,false,false));
        structure.register(new SolidBlockElement(0,5,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new MultipleFacingBlockElement(0,5,1,Material.IRON_BARS,true,false,false,false));
        structure.register(new MultipleFacingBlockElement(0,6,-1,Material.IRON_BARS,false,true,false,false));
        structure.register(new SolidBlockElement(0,6,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new MultipleFacingBlockElement(0,6,1,Material.IRON_BARS,true,false,false,false));
        structure.register(new SolidBlockElement(0,7,0,Material.COBWEB));
        structure.register(new MultipleFacingBlockElement(1,1,-1,Material.SPRUCE_FENCE,false,true,true,false));
        structure.register(new SolidBlockElement(1,1,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new MultipleFacingBlockElement(1,1,1,Material.SPRUCE_FENCE,true,false,true,false));
        structure.register(new MultipleFacingBlockElement(1,2,-1,Material.SPRUCE_FENCE,false,true,true,false));
        structure.register(new SolidBlockElement(1,2,0,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(1,2,1,Material.SPRUCE_LEAVES));
        structure.register(new MultipleFacingBlockElement(1,3,-1,Material.SPRUCE_FENCE,false,true,true,false));
        structure.register(new SolidBlockElement(1,3,0,Material.GREEN_STAINED_GLASS));
        structure.register(new MultipleFacingBlockElement(1,3,1,Material.SPRUCE_FENCE,true,false,true,false));
        structure.register(new SolidBlockElement(1,4,-1,Material.SPRUCE_LEAVES));
        structure.register(new SolidBlockElement(1,4,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new MultipleFacingBlockElement(1,4,1,Material.SPRUCE_FENCE,true,false,true,false));
        structure.register(new MultipleFacingBlockElement(1,5,0,Material.VINE,false,false,true,false));
        structure.register(new DirectionalBlockElement(1,6,0,Material.GREEN_WALL_BANNER,BlockFace.EAST));
        structure.register(new SolidBlockElement(1,8,0,Material.COBWEB));
        LV2PotionTower = structure;
        return structure;
    }

    private static TowerStructure LV3PotionTower;
    private static TowerStructure LV3PotionTower() {
        if (LV3PotionTower != null) return LV3PotionTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-1,1,-1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(-1,1,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(-1,1,1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(-1,2,-1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(-1,2,0,Material.LIME_STAINED_GLASS));
        structure.register(new SolidBlockElement(-1,2,1,Material.SPRUCE_LEAVES));
        structure.register(new SolidBlockElement(-1,3,-1,Material.SPRUCE_LEAVES));
        structure.register(new SolidBlockElement(-1,3,0,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(-1,3,1,Material.SPRUCE_LEAVES));
        structure.register(new SolidBlockElement(-1,4,-1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(-1,4,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(-1,4,1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(-1,5,0,Material.SPRUCE_LEAVES));
        structure.register(new SolidBlockElement(-1,6,0,Material.COBWEB));
        structure.register(new SolidBlockElement(-1,7,0,Material.GREEN_CONCRETE));
        structure.register(new SolidBlockElement(0,1,-1,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(0,1,0,Material.COARSE_DIRT));
        structure.register(new SolidBlockElement(0,1,1,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(0,2,-1,Material.LIME_STAINED_GLASS));
        structure.register(new SolidBlockElement(0,2,0,Material.GREEN_TERRACOTTA));
        structure.register(new SolidBlockElement(0,2,1,Material.LIME_STAINED_GLASS));
        structure.register(new SolidBlockElement(0,3,-1,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(0,3,0,Material.GREEN_TERRACOTTA));
        structure.register(new SolidBlockElement(0,3,1,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(0,4,-1,Material.GREEN_CONCRETE));
        structure.register(new SolidBlockElement(0,4,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(0,4,1,Material.GREEN_CONCRETE));
        structure.register(new MultipleFacingBlockElement(0,5,-1,Material.IRON_BARS,false,true,false,false));
        structure.register(new SolidBlockElement(0,5,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new MultipleFacingBlockElement(0,5,1,Material.IRON_BARS,true,false,false,false));
        structure.register(new MultipleFacingBlockElement(0,6,-1,Material.IRON_BARS,false,true,false,false));
        structure.register(new SolidBlockElement(0,6,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new MultipleFacingBlockElement(0,6,1,Material.IRON_BARS,true,false,false,false));
        structure.register(new SolidBlockElement(0,7,-1,Material.GREEN_CONCRETE));
        structure.register(new SolidBlockElement(0,7,0,Material.COBWEB));
        structure.register(new SolidBlockElement(0,7,1,Material.GREEN_CONCRETE));
        structure.register(new SolidBlockElement(0,8,0,Material.COBWEB));
        structure.register(new SolidBlockElement(1,1,-1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(1,1,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(1,1,1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(1,2,-1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(1,2,0,Material.GREEN_STAINED_GLASS));
        structure.register(new SolidBlockElement(1,2,1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(1,3,-1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(1,3,0,Material.LIME_STAINED_GLASS));
        structure.register(new SolidBlockElement(1,3,1,Material.MOSSY_STONE_BRICK_WALL));
        structure.register(new SolidBlockElement(1,4,-1,Material.SPRUCE_LEAVES));
        structure.register(new SolidBlockElement(1,4,0,Material.MOSSY_STONE_BRICKS));
        structure.register(new SolidBlockElement(1,4,1,Material.SPRUCE_LEAVES));
        structure.register(new SolidBlockElement(1,5,0,Material.POTTED_WITHER_ROSE));
        structure.register(new DirectionalBlockElement(1,6,0,Material.GREEN_WALL_BANNER,BlockFace.EAST));
        structure.register(new SolidBlockElement(1,7,0,Material.GREEN_CONCRETE));
        structure.register(new SolidBlockElement(1,8,0,Material.COBWEB));
        LV3PotionTower = structure;
        return structure;
    }

    private static TowerStructure LV1FireTower;
    private static TowerStructure LV1FireTower() {
        if (LV1FireTower != null) return LV1FireTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-1, 1, 0, Material.CHISELED_NETHER_BRICKS));
        structure.register(new SolidBlockElement(-1, 2, 0, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(-1, 3, 0, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(-1, 4, -1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(-1, 4, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 4, 1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(-1, 5, 0, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(0, 1, -1, Material.CHISELED_NETHER_BRICKS));
        structure.register(new SolidBlockElement(0, 1, 0, Material.CHISELED_NETHER_BRICKS));
        structure.register(new SolidBlockElement(0, 1, 1, Material.CHISELED_NETHER_BRICKS));
        structure.register(new SolidBlockElement(0, 2, -1, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(0, 2, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 2, 1, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(0, 3, -1, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(0, 3, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 3, 1, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(0, 4, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 4, 0, Material.NETHERRACK));
        structure.register(new SolidBlockElement(0, 4, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 5, -1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(0, 5, 0, Material.FIRE));
        structure.register(new SolidBlockElement(0, 5, 1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(1, 1, 0, Material.CHISELED_NETHER_BRICKS));
        structure.register(new SolidBlockElement(1, 2, 0, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(1, 3, 0, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(1, 4, -1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(1, 4, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 4, 1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(1, 5, 0, Material.RED_NETHER_BRICK_SLAB));
        LV1FireTower = structure;
        return structure;
    }

    private static TowerStructure LV2FireTower;
    private static TowerStructure LV2FireTower() {
        if (LV2FireTower != null) return LV2FireTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-1, 1, -1, Material.NETHER_BRICK_FENCE));
        structure.register(new SolidBlockElement(-1, 1, 0, Material.CHISELED_NETHER_BRICKS));
        structure.register(new SolidBlockElement(-1, 1, 1, Material.NETHER_BRICK_FENCE));
        structure.register(new SolidBlockElement(-1, 2, -1, Material.NETHER_BRICK_FENCE));
        structure.register(new SolidBlockElement(-1, 2, 0, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(-1, 2, 1, Material.NETHER_BRICK_FENCE));
        structure.register(new SolidBlockElement(-1, 3, -1, Material.NETHER_BRICK_FENCE));
        structure.register(new SolidBlockElement(-1, 3, 0, Material.MAGMA_BLOCK));
        structure.register(new SolidBlockElement(-1, 3, 1, Material.NETHER_BRICK_FENCE));
        structure.register(new SolidBlockElement(-1, 4, -1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(-1, 4, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 4, 1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(-1, 5, 0, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(0, 1, -1, Material.CHISELED_NETHER_BRICKS));
        structure.register(new SolidBlockElement(0, 1, 0, Material.CHISELED_NETHER_BRICKS));
        structure.register(new SolidBlockElement(0, 1, 1, Material.CHISELED_NETHER_BRICKS));
        structure.register(new SolidBlockElement(0, 2, -1, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(0, 2, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 2, 1, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(0, 3, -1, Material.MAGMA_BLOCK));
        structure.register(new SolidBlockElement(0, 3, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 3, 1, Material.MAGMA_BLOCK));
        structure.register(new SolidBlockElement(0, 4, -1, Material.MAGMA_BLOCK));
        structure.register(new SolidBlockElement(0, 4, 0, Material.NETHERRACK));
        structure.register(new SolidBlockElement(0, 4, 1, Material.MAGMA_BLOCK));
        structure.register(new SolidBlockElement(0, 5, -1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(0, 5, 0, Material.FIRE));
        structure.register(new SolidBlockElement(0, 5, 1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(1, 1, -1, Material.NETHER_BRICK_FENCE));
        structure.register(new SolidBlockElement(1, 1, 0, Material.CHISELED_NETHER_BRICKS));
        structure.register(new SolidBlockElement(1, 1, 1, Material.NETHER_BRICK_FENCE));
        structure.register(new SolidBlockElement(1, 2, -1, Material.NETHER_BRICK_FENCE));
        structure.register(new SolidBlockElement(1, 2, 0, Material.MAGMA_BLOCK));
        structure.register(new SolidBlockElement(1, 2, 1, Material.NETHER_BRICK_FENCE));
        structure.register(new SolidBlockElement(1, 3, -1, Material.NETHER_BRICK_FENCE));
        structure.register(new SolidBlockElement(1, 3, 0, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(1, 3, 1, Material.NETHER_BRICK_FENCE));
        structure.register(new SolidBlockElement(1, 4, -1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(1, 4, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 4, 1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(1, 5, 0, Material.RED_NETHER_BRICK_SLAB));
        LV2FireTower = structure;
        return structure;
    }

    private static TowerStructure LV3FireTower;
    private static TowerStructure LV3FireTower() {
        if (LV3FireTower != null) return LV3FireTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-1, 1, -1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(-1, 1, 0, Material.CHISELED_NETHER_BRICKS));
        structure.register(new SolidBlockElement(-1, 1, 1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(-1, 2, -1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(-1, 2, 0, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(-1, 2, 1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(-1, 3, -1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(-1, 3, 0, Material.MAGMA_BLOCK));
        structure.register(new SolidBlockElement(-1, 3, 1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(-1, 4, -1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(-1, 4, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 4, 1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(-1, 5, -1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(-1, 5, 0, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(-1, 5, 1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(-1, 6, -1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(-1, 6, 0, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(-1, 6, 1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(0, 1, -1, Material.CHISELED_NETHER_BRICKS));
        structure.register(new SolidBlockElement(0, 1, 0, Material.CHISELED_NETHER_BRICKS));
        structure.register(new SolidBlockElement(0, 1, 1, Material.CHISELED_NETHER_BRICKS));
        structure.register(new SolidBlockElement(0, 2, -1, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(0, 2, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 2, 1, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(0, 3, -1, Material.MAGMA_BLOCK));
        structure.register(new SolidBlockElement(0, 3, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 3, 1, Material.MAGMA_BLOCK));
        structure.register(new SolidBlockElement(0, 4, -1, Material.MAGMA_BLOCK));
        structure.register(new SolidBlockElement(0, 4, 0, Material.NETHERRACK));
        structure.register(new SolidBlockElement(0, 4, 1, Material.MAGMA_BLOCK));
        structure.register(new SolidBlockElement(0, 5, -1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(0, 5, 0, Material.FIRE));
        structure.register(new SolidBlockElement(0, 5, 1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(0, 6, -1, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(0, 6, 0, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(0, 6, 1, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(0, 7, 0, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(1, 1, -1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(1, 1, 0, Material.CHISELED_NETHER_BRICKS));
        structure.register(new SolidBlockElement(1, 1, 1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(1, 2, -1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(1, 2, 0, Material.MAGMA_BLOCK));
        structure.register(new SolidBlockElement(1, 2, 1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(1, 3, -1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(1, 3, 0, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(1, 3, 1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(1, 4, -1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(1, 4, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 4, 1, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(1, 5, -1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(1, 5, 0, Material.RED_NETHER_BRICK_SLAB));
        structure.register(new SolidBlockElement(1, 5, 1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(1, 6, -1, Material.NETHER_BRICK_WALL));
        structure.register(new SolidBlockElement(1, 6, 0, Material.RED_STAINED_GLASS));
        structure.register(new SolidBlockElement(1, 6, 1, Material.NETHER_BRICK_WALL));
        LV3FireTower = structure;
        return structure;
    }

    private static TowerStructure LV1ExplosionTower;
    private static TowerStructure LV1ExplosionTower() {
        if (LV1ExplosionTower != null) return LV1ExplosionTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-2, 1, -1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-2, 1, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 1, 1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-2, 2, -1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-2, 2, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 2, 1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-2, 3, -1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-2, 3, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 3, 1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1, 1, -2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1, 1, 2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1, 2, -2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1, 2, 2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1, 3, -2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1, 3, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 3, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 3, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 3, 2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1, 4, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 4, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 4, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 5, -1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(-1, 5, 0, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(-1, 5, 1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(-1, 6, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 6, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 6, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 1, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 1, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 2, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 2, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 3, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 3, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 3, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 3, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 3, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 4, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 4, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 5, -1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(0, 5, 0, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(0, 5, 1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(0, 6, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 6, 0, Material.BLACK_CONCRETE));
        structure.register(new SolidBlockElement(0, 6, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 7, 0, Material.BLACK_CONCRETE));
        structure.register(new SolidBlockElement(1, 1, -2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1, 1, 2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1, 2, -2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1, 2, 2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1, 3, -2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1, 3, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 3, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 3, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 3, 2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1, 4, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 4, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 4, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 5, -1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(1, 5, 0, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(1, 5, 1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(1, 6, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 6, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 6, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 8, 0, Material.BLACK_CONCRETE));
        structure.register(new SolidBlockElement(2, 1, -1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(2, 1, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 1, 1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(2, 2, -1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(2, 2, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 2, 1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(2, 3, -1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(2, 3, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 3, 1, Material.STONE_BRICKS));
        LV1ExplosionTower = structure;
        return structure;
    }

    private static TowerStructure LV2ExplosionTower;
    private static TowerStructure LV2ExplosionTower() {
        if (LV2ExplosionTower != null) return LV2ExplosionTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-2, 1, -2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(-2, 1, -1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-2, 1, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 1, 1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-2, 1, 2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(-2, 2, -2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(-2, 2, -1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-2, 2, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 2, 1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-2, 2, 2, Material.IRON_BARS));
        structure.register(new DirectionalBlockElement(-2, 3, -2, Material.PISTON, BlockFace.UP));
        structure.register(new SolidBlockElement(-2, 3, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 3, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 3, 1, Material.SMOOTH_STONE));
        structure.register(new DirectionalBlockElement(-2, 3, 2, Material.PISTON, BlockFace.UP));
        structure.register(new SolidBlockElement(-2, 4, -2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(-2, 4, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 4, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 4, 2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(-2, 5, -2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(-2, 5, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 5, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 5, 2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(-2, 6, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 6, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 6, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 6, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 6, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 1, -2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1, 1, 2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1, 2, -2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1, 2, 2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1, 3, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 3, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 3, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 3, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 3, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 4, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 4, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 4, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 4, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 4, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 5, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 5, -1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(-1, 5, 0, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(-1, 5, 1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(-1, 5, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 6, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 6, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 6, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 6, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 6, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 1, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 1, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 2, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 2, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 3, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 3, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 3, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 3, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 3, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 4, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 4, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 4, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 5, -1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(0, 5, 0, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(0, 5, 1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(0, 6, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 6, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 6, 0, Material.BLACK_CONCRETE));
        structure.register(new SolidBlockElement(0, 6, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 6, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 7, 0, Material.BLACK_CONCRETE));
        structure.register(new SolidBlockElement(1, 1, -2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1, 1, 2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1, 2, -2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1, 2, 2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1, 3, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 3, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 3, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 3, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 3, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 4, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 4, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 4, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 4, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 4, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 5, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 5, -1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(1, 5, 0, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(1, 5, 1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(1, 5, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 6, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 6, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 6, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 6, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 6, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 8, 0, Material.BLACK_CONCRETE));
        structure.register(new SolidBlockElement(2, 1, -2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(2, 1, -1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(2, 1, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 1, 1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(2, 1, 2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(2, 2, -2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(2, 2, -1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(2, 2, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 2, 1, Material.STONE_BRICKS));
        structure.register(new DirectionalBlockElement(2, 3, -2, Material.PISTON, BlockFace.UP));
        structure.register(new SolidBlockElement(2, 3, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 3, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 3, 1, Material.SMOOTH_STONE));
        structure.register(new DirectionalBlockElement(2, 3, 2, Material.PISTON, BlockFace.UP));
        structure.register(new SolidBlockElement(2, 4, -2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(2, 4, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 4, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 4, 2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(2, 5, -2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(2, 5, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 5, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 5, 2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(2, 6, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 6, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 6, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 6, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 6, 2, Material.SMOOTH_STONE));
        LV2ExplosionTower = structure;
        return structure;
    }

    private static TowerStructure LV3ExplosionTower;
    private static TowerStructure LV3ExplosionTower() {
        if (LV3ExplosionTower != null) return LV3ExplosionTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-2, 1, -2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(-2, 1, -1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-2, 1, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 1, 1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-2, 1, 2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(-2, 2, -2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(-2, 2, -1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-2, 2, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 2, 1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-2, 2, 2, Material.IRON_BARS));
        structure.register(new DirectionalBlockElement(-2, 3, -2, Material.PISTON, BlockFace.UP));
        structure.register(new SolidBlockElement(-2, 3, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 3, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 3, 1, Material.SMOOTH_STONE));
        structure.register(new DirectionalBlockElement(-2, 3, 2, Material.PISTON, BlockFace.UP));
        structure.register(new SolidBlockElement(-2, 4, -2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(-2, 4, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 4, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 4, 2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(-2, 5, -2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(-2, 5, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 5, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 5, 2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(-2, 6, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 6, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 6, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 6, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 6, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2, 7, 0, Material.POLISHED_ANDESITE_SLAB));
        structure.register(new SolidBlockElement(-2, 7, 1, Material.POLISHED_ANDESITE_SLAB));
        structure.register(new SolidBlockElement(-1, 1, -2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1, 1, 2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1, 2, -2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1, 2, 2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1, 3, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 3, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 3, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 3, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 3, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 4, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 4, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 4, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 4, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 4, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 5, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 5, -1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(-1, 5, 0, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(-1, 5, 1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(-1, 5, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 6, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 6, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 6, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 6, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(-1, 6, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1, 7, -2, Material.POLISHED_ANDESITE_SLAB));
        structure.register(new SolidBlockElement(-1, 7, -1, Material.POLISHED_ANDESITE_SLAB));
        structure.register(new SolidBlockElement(-1, 7, 0, Material.TNT));
        structure.register(new SolidBlockElement(-1, 7, 1, Material.POLISHED_ANDESITE_SLAB));
        structure.register(new SolidBlockElement(-1, 7, 2, Material.POLISHED_ANDESITE_SLAB));
        structure.register(new SolidBlockElement(0, 1, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 1, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 2, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 2, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 3, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 3, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 3, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 3, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 3, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 4, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 4, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 4, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 5, -1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(0, 5, 0, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(0, 5, 1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(0, 6, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 6, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 6, 0, Material.BLACK_CONCRETE));
        structure.register(new SolidBlockElement(0, 6, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(0, 6, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0, 7, -2, Material.POLISHED_ANDESITE_SLAB));
        structure.register(new SolidBlockElement(0, 7, -1, Material.TNT));
        structure.register(new SolidBlockElement(0, 7, 0, Material.TNT));
        structure.register(new SolidBlockElement(0, 7, 1, Material.TNT));
        structure.register(new SolidBlockElement(0, 7, 2, Material.POLISHED_ANDESITE_SLAB));
        structure.register(new SolidBlockElement(0, 8, 0, Material.TNT));
        structure.register(new SolidBlockElement(0, 8, 1, Material.TNT));
        structure.register(new SolidBlockElement(0, 9, 0, Material.TNT));
        structure.register(new SolidBlockElement(1, 1, -2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1, 1, 2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1, 2, -2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1, 2, 2, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1, 3, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 3, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 3, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 3, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 3, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 4, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 4, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 4, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 4, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 4, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 5, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 5, -1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(1, 5, 0, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(1, 5, 1, Material.WHITE_CONCRETE));
        structure.register(new SolidBlockElement(1, 5, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 6, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 6, -1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 6, 0, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 6, 1, Material.RED_CONCRETE));
        structure.register(new SolidBlockElement(1, 6, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1, 7, -2, Material.POLISHED_ANDESITE_SLAB));
        structure.register(new SolidBlockElement(1, 7, -1, Material.TNT));
        structure.register(new SolidBlockElement(1, 7, 0, Material.TNT));
        structure.register(new SolidBlockElement(1, 7, 1, Material.POLISHED_ANDESITE_SLAB));
        structure.register(new SolidBlockElement(1, 7, 2, Material.POLISHED_ANDESITE_SLAB));
        structure.register(new SolidBlockElement(1, 8, 0, Material.TNT));
        structure.register(new SolidBlockElement(2, 1, -2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(2, 1, -1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(2, 1, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 1, 1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(2, 1, 2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(2, 2, -2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(2, 2, -1, Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(2, 2, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 2, 1, Material.STONE_BRICKS));
        structure.register(new DirectionalBlockElement(2, 3, -2, Material.PISTON, BlockFace.UP));
        structure.register(new SolidBlockElement(2, 3, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 3, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 3, 1, Material.SMOOTH_STONE));
        structure.register(new DirectionalBlockElement(2, 3, 2, Material.PISTON, BlockFace.UP));
        structure.register(new SolidBlockElement(2, 4, -2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(2, 4, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 4, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 4, 2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(2, 5, -2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(2, 5, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 5, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 5, 2, Material.IRON_BARS));
        structure.register(new SolidBlockElement(2, 6, -2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 6, -1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 6, 0, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 6, 1, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 6, 2, Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2, 7, -1, Material.POLISHED_ANDESITE_SLAB));
        structure.register(new SolidBlockElement(2, 7, 0, Material.POLISHED_ANDESITE_SLAB));
        structure.register(new SolidBlockElement(2, 7, 1, Material.POLISHED_ANDESITE_SLAB));
        LV3ExplosionTower = structure;
        return structure;
    }

    private static TowerStructure LV1MinigunTower;
    private static TowerStructure LV1MinigunTower() {
        if (LV1MinigunTower != null) return LV1MinigunTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-2,1,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-2,1,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-2,1,1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-2,2,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-2,2,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-2,2,1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-2,3,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-2,4,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-2,5,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-2,5,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-2,5,1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-2,6,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,1,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,1,2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,2,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,2,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,2,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,2,1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,2,2,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(-1,3,-1,Material.DISPENSER,BlockFace.NORTH));
        structure.register(new SolidBlockElement(-1,3,0,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(-1,3,1,Material.DISPENSER,BlockFace.SOUTH));
        structure.register(new DirectionalBlockElement(-1,4,-1,Material.DISPENSER,BlockFace.WEST));
        structure.register(new SolidBlockElement(-1,4,0,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(-1,4,1,Material.DISPENSER,BlockFace.WEST));
        structure.register(new SolidBlockElement(-1,5,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,5,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,5,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,5,1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,5,2,Material.POLISHED_DIORITE));
        structure.register(new MultipleFacingBlockElement(-1,6,-1,Material.IRON_BARS,false,true,false,true));
        structure.register(new SolidBlockElement(-1,6,0,Material.POLISHED_DIORITE));
        structure.register(new MultipleFacingBlockElement(-1,6,1,Material.IRON_BARS,true,false,false,true));
        structure.register(new MultipleFacingBlockElement(-1,7,0,Material.IRON_BARS,false,false,false,true));
        structure.register(new SolidBlockElement(0,1,-2,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,1,2,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,2,-2,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,2,2,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,3,-2,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,3,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,3,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,3,1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,3,2,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,4,-2,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,4,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,4,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,4,1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,4,2,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,5,-2,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,5,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,5,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,5,1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,5,2,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,6,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,6,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,6,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,6,1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,6,2,Material.POLISHED_DIORITE));
        structure.register(new MultipleFacingBlockElement(0,7,-1,Material.IRON_BARS,false,true,false,false));
        structure.register(new SolidBlockElement(0,7,0,Material.POLISHED_DIORITE));
        structure.register(new MultipleFacingBlockElement(0,7,1,Material.IRON_BARS,true,false,false,false));
        structure.register(new SolidBlockElement(1,1,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(1,1,2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(1,2,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(1,2,2,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(1,3,-1,Material.DISPENSER,BlockFace.NORTH));
        structure.register(new SolidBlockElement(1,3,0,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(1,3,1,Material.DISPENSER,BlockFace.SOUTH));
        structure.register(new DirectionalBlockElement(1,4,-1,Material.DISPENSER,BlockFace.EAST));
        structure.register(new SolidBlockElement(1,4,0,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(1,4,1,Material.DISPENSER,BlockFace.EAST));
        structure.register(new SolidBlockElement(1,5,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(1,5,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,5,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,5,1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,5,2,Material.POLISHED_DIORITE));
        structure.register(new MultipleFacingBlockElement(1,6,-1,Material.IRON_BARS,false,true,true,false));
        structure.register(new SolidBlockElement(1,6,0,Material.POLISHED_DIORITE));
        structure.register(new MultipleFacingBlockElement(1,6,1,Material.IRON_BARS,true,false,true,false));
        structure.register(new MultipleFacingBlockElement(1,7,0,Material.IRON_BARS,false,false,true,false));
        structure.register(new SolidBlockElement(2,1,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(2,1,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(2,1,1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(2,2,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(2,2,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(2,2,1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(2,3,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(2,4,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(2,5,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(2,5,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(2,5,1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(2,6,0,Material.POLISHED_DIORITE));
        LV1MinigunTower = structure;
        return structure;
    }

    private static TowerStructure LV2MinigunTower;
    private static TowerStructure LV2MinigunTower() {
        if (LV2MinigunTower != null) return LV2MinigunTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-2,1,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-2,1,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-2,1,1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-2,2,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-2,2,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-2,2,1,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(-2,3,0,Material.DISPENSER,BlockFace.WEST));
        structure.register(new DirectionalBlockElement(-2,4,0,Material.DISPENSER,BlockFace.WEST));
        structure.register(new SolidBlockElement(-2,5,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-2,5,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-2,5,1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,1,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,1,2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,2,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,2,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,2,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,2,1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,2,2,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(-1,3,-1,Material.DISPENSER,BlockFace.NORTH));
        structure.register(new SolidBlockElement(-1,3,0,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(-1,3,1,Material.DISPENSER,BlockFace.SOUTH));
        structure.register(new DirectionalBlockElement(-1,4,-1,Material.DISPENSER,BlockFace.WEST));
        structure.register(new SolidBlockElement(-1,4,0,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(-1,4,1,Material.DISPENSER,BlockFace.WEST));
        structure.register(new SolidBlockElement(-1,5,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,5,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,5,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,5,1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,5,2,Material.POLISHED_DIORITE));
        structure.register(new MultipleFacingBlockElement(-1,6,-1,Material.IRON_BARS,false,true,false,true));
        structure.register(new SolidBlockElement(-1,6,0,Material.POLISHED_DIORITE));
        structure.register(new MultipleFacingBlockElement(-1,6,1,Material.IRON_BARS,true,false,false,true));
        structure.register(new MultipleFacingBlockElement(-1,7,0,Material.IRON_BARS,false,false,false,true));
        structure.register(new SolidBlockElement(0,1,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,1,2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,2,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,2,2,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(0,3,-2,Material.DISPENSER,BlockFace.NORTH));
        structure.register(new SolidBlockElement(0,3,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,3,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,3,1,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(0,3,2,Material.DISPENSER,BlockFace.SOUTH));
        structure.register(new DirectionalBlockElement(0,4,-2,Material.DISPENSER,BlockFace.NORTH));
        structure.register(new SolidBlockElement(0,4,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,4,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,4,1,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(0,4,2,Material.DISPENSER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,5,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,5,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,5,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,5,1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,5,2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,6,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,6,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,6,1,Material.POLISHED_DIORITE));
        structure.register(new MultipleFacingBlockElement(0,7,-1,Material.IRON_BARS,false,true,false,false));
        structure.register(new SolidBlockElement(0,7,0,Material.POLISHED_DIORITE));
        structure.register(new MultipleFacingBlockElement(0,7,1,Material.IRON_BARS,true,false,false,false));
        structure.register(new SolidBlockElement(1,1,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(1,1,2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(1,2,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(1,2,2,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(1,3,-1,Material.DISPENSER,BlockFace.NORTH));
        structure.register(new SolidBlockElement(1,3,0,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(1,3,1,Material.DISPENSER,BlockFace.SOUTH));
        structure.register(new DirectionalBlockElement(1,4,-1,Material.DISPENSER,BlockFace.EAST));
        structure.register(new SolidBlockElement(1,4,0,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(1,4,1,Material.DISPENSER,BlockFace.EAST));
        structure.register(new SolidBlockElement(1,5,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(1,5,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,5,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,5,1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,5,2,Material.POLISHED_DIORITE));
        structure.register(new MultipleFacingBlockElement(1,6,-1,Material.IRON_BARS,false,true,true,false));
        structure.register(new SolidBlockElement(1,6,0,Material.POLISHED_DIORITE));
        structure.register(new MultipleFacingBlockElement(1,6,1,Material.IRON_BARS,true,false,true,false));
        structure.register(new MultipleFacingBlockElement(1,7,0,Material.IRON_BARS,false,false,true,false));
        structure.register(new SolidBlockElement(2,1,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(2,1,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(2,1,1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(2,2,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(2,2,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(2,2,1,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(2,3,0,Material.DISPENSER,BlockFace.EAST));
        structure.register(new DirectionalBlockElement(2,4,0,Material.DISPENSER,BlockFace.EAST));
        structure.register(new SolidBlockElement(2,5,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(2,5,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(2,5,1,Material.POLISHED_DIORITE));
        LV2MinigunTower = structure;
        return structure;
    }

    private static TowerStructure LV3MinigunTower;
    private static TowerStructure LV3MinigunTower() {
        if (LV3MinigunTower != null) return LV3MinigunTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-2,1,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-2,1,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-2,1,1,Material.POLISHED_DIORITE));
        structure.register(new StairsBlockElement(-2,2,-1,Material.DIORITE_STAIRS,BlockFace.EAST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(-2,2,0,Material.DIORITE_STAIRS,BlockFace.EAST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(-2,2,1,Material.DIORITE_STAIRS,BlockFace.EAST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new DirectionalBlockElement(-2,3,-1,Material.PISTON,BlockFace.NORTH));
        structure.register(new DirectionalBlockElement(-2,3,0,Material.DISPENSER,BlockFace.WEST));
        structure.register(new DirectionalBlockElement(-2,3,1,Material.PISTON,BlockFace.SOUTH));
        structure.register(new DirectionalBlockElement(-2,4,0,Material.DISPENSER,BlockFace.WEST));
        structure.register(new StairsBlockElement(-2,5,-1,Material.DIORITE_STAIRS,BlockFace.EAST,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(-2,5,0,Material.DIORITE_STAIRS,BlockFace.EAST,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(-2,5,1,Material.DIORITE_STAIRS,BlockFace.EAST,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(-1,1,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,1,2,Material.POLISHED_DIORITE));
        structure.register(new StairsBlockElement(-1,2,-2,Material.DIORITE_STAIRS,BlockFace.SOUTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(-1,2,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,2,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(-1,2,1,Material.POLISHED_DIORITE));
        structure.register(new StairsBlockElement(-1,2,2,Material.DIORITE_STAIRS,BlockFace.NORTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new DirectionalBlockElement(-1,3,-1,Material.DISPENSER,BlockFace.NORTH));
        structure.register(new SolidBlockElement(-1,3,0,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(-1,3,1,Material.DISPENSER,BlockFace.SOUTH));
        structure.register(new DirectionalBlockElement(-1,4,-2,Material.PISTON,BlockFace.NORTH));
        structure.register(new DirectionalBlockElement(-1,4,-1,Material.DISPENSER,BlockFace.WEST));
        structure.register(new SolidBlockElement(-1,4,0,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(-1,4,1,Material.DISPENSER,BlockFace.WEST));
        structure.register(new DirectionalBlockElement(-1,4,2,Material.PISTON,BlockFace.SOUTH));
        structure.register(new StairsBlockElement(-1,5,-2,Material.DIORITE_STAIRS,BlockFace.SOUTH,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(-1,5,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,5,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,5,1,Material.COBBLESTONE));
        structure.register(new StairsBlockElement(-1,5,2,Material.DIORITE_STAIRS,BlockFace.NORTH,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new MultipleFacingBlockElement(-1,6,-1,Material.IRON_BARS,false,true,false,true));
        structure.register(new SolidBlockElement(-1,6,0,Material.POLISHED_DIORITE));
        structure.register(new MultipleFacingBlockElement(-1,6,1,Material.IRON_BARS,true,false,false,true));
        structure.register(new MultipleFacingBlockElement(-1,7,0,Material.IRON_BARS,false,false,false,true));
        structure.register(new SolidBlockElement(0,1,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,1,2,Material.POLISHED_DIORITE));
        structure.register(new StairsBlockElement(0,2,-2,Material.DIORITE_STAIRS,BlockFace.SOUTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(0,2,2,Material.DIORITE_STAIRS,BlockFace.NORTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new DirectionalBlockElement(0,3,-2,Material.DISPENSER,BlockFace.NORTH));
        structure.register(new SolidBlockElement(0,3,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,3,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,3,1,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(0,3,2,Material.DISPENSER,BlockFace.SOUTH));
        structure.register(new DirectionalBlockElement(0,4,-2,Material.DISPENSER,BlockFace.NORTH));
        structure.register(new SolidBlockElement(0,4,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,4,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,4,1,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(0,4,2,Material.DISPENSER,BlockFace.SOUTH));
        structure.register(new StairsBlockElement(0,5,-2,Material.DIORITE_STAIRS,BlockFace.SOUTH,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0,5,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,5,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,5,1,Material.COBBLESTONE));
        structure.register(new StairsBlockElement(0,5,2,Material.DIORITE_STAIRS,BlockFace.NORTH,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0,6,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,6,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(0,6,1,Material.POLISHED_DIORITE));
        structure.register(new MultipleFacingBlockElement(0,7,-1,Material.IRON_BARS,false,true,false,false));
        structure.register(new SolidBlockElement(0,7,0,Material.POLISHED_DIORITE));
        structure.register(new MultipleFacingBlockElement(0,7,1,Material.IRON_BARS,true,false,false,false));
        structure.register(new SolidBlockElement(1,1,-2,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(1,1,2,Material.POLISHED_DIORITE));
        structure.register(new StairsBlockElement(1,2,-2,Material.DIORITE_STAIRS,BlockFace.SOUTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(1,2,2,Material.DIORITE_STAIRS,BlockFace.NORTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new DirectionalBlockElement(1,3,-1,Material.DISPENSER,BlockFace.NORTH));
        structure.register(new SolidBlockElement(1,3,0,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(1,3,1,Material.DISPENSER,BlockFace.SOUTH));
        structure.register(new DirectionalBlockElement(1,4,-2,Material.PISTON,BlockFace.NORTH));
        structure.register(new DirectionalBlockElement(1,4,-1,Material.DISPENSER,BlockFace.EAST));
        structure.register(new SolidBlockElement(1,4,0,Material.POLISHED_DIORITE));
        structure.register(new DirectionalBlockElement(1,4,1,Material.DISPENSER,BlockFace.EAST));
        structure.register(new DirectionalBlockElement(1,4,2,Material.PISTON,BlockFace.SOUTH));
        structure.register(new StairsBlockElement(1,5,-2,Material.DIORITE_STAIRS,BlockFace.SOUTH,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(1,5,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,5,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,5,1,Material.COBBLESTONE));
        structure.register(new StairsBlockElement(1,5,2,Material.DIORITE_STAIRS,BlockFace.NORTH,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new MultipleFacingBlockElement(1,6,-1,Material.IRON_BARS,false,true,true,false));
        structure.register(new SolidBlockElement(1,6,0,Material.POLISHED_DIORITE));
        structure.register(new MultipleFacingBlockElement(1,6,1,Material.IRON_BARS,true,false,true,false));
        structure.register(new MultipleFacingBlockElement(1,7,0,Material.IRON_BARS,false,false,true,false));
        structure.register(new SolidBlockElement(2,1,-1,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(2,1,0,Material.POLISHED_DIORITE));
        structure.register(new SolidBlockElement(2,1,1,Material.POLISHED_DIORITE));
        structure.register(new StairsBlockElement(2,2,-1,Material.DIORITE_STAIRS,BlockFace.WEST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(2,2,0,Material.DIORITE_STAIRS,BlockFace.WEST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(2,2,1,Material.DIORITE_STAIRS,BlockFace.WEST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new DirectionalBlockElement(2,3,-1,Material.PISTON,BlockFace.NORTH));
        structure.register(new DirectionalBlockElement(2,3,0,Material.DISPENSER,BlockFace.EAST));
        structure.register(new DirectionalBlockElement(2,3,1,Material.PISTON,BlockFace.SOUTH));
        structure.register(new DirectionalBlockElement(2,4,0,Material.DISPENSER,BlockFace.EAST));
        structure.register(new StairsBlockElement(2,5,-1,Material.DIORITE_STAIRS,BlockFace.WEST,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(2,5,0,Material.DIORITE_STAIRS,BlockFace.WEST,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(2,5,1,Material.DIORITE_STAIRS,BlockFace.WEST,Bisected.Half.BOTTOM,Stairs.Shape.STRAIGHT));
        LV3MinigunTower = structure;
        return structure;
    }

    private static TowerStructure LV1CrossbowTower;
    private static TowerStructure LV1CrossbowTower() {
        if (LV1CrossbowTower != null) return LV1CrossbowTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-1,1,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,1,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,1,1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,2,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,2,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,2,1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,3,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,3,0,Material.SANDSTONE));
        structure.register(new SolidBlockElement(-1,3,1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,4,-1,Material.SANDSTONE));
        structure.register(new SolidBlockElement(-1,4,0,Material.SANDSTONE));
        structure.register(new SolidBlockElement(-1,4,1,Material.SANDSTONE));
        structure.register(new MultipleFacingBlockElement(-1,5,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,false,true));
        structure.register(new SolidBlockElement(-1,5,0,Material.SANDSTONE));
        structure.register(new MultipleFacingBlockElement(-1,5,1,Material.WHITE_STAINED_GLASS_PANE,true,false,false,true));
        structure.register(new MultipleFacingBlockElement(-1,6,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,false,true));
        structure.register(new SolidBlockElement(-1,6,0,Material.OAK_PLANKS));
        structure.register(new MultipleFacingBlockElement(-1,6,1,Material.WHITE_STAINED_GLASS_PANE,true,false,false,true));
        structure.register(new MultipleFacingBlockElement(-1,7,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,false,true));
        structure.register(new MultipleFacingBlockElement(-1,7,0,Material.WHITE_STAINED_GLASS_PANE,true,true,false,true));
        structure.register(new MultipleFacingBlockElement(-1,7,1,Material.WHITE_STAINED_GLASS_PANE,true,false,false,true));
        structure.register(new SolidBlockElement(-1,8,0,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(0,1,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,1,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,1,1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,2,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,2,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,2,1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(0,3,-1,Material.SANDSTONE));
        structure.register(new SolidBlockElement(0,3,0,Material.SANDSTONE));
        structure.register(new SolidBlockElement(0,3,1,Material.SANDSTONE));
        structure.register(new SolidBlockElement(0,4,-1,Material.SANDSTONE));
        structure.register(new SolidBlockElement(0,4,0,Material.SANDSTONE));
        structure.register(new SolidBlockElement(0,4,1,Material.SANDSTONE));
        structure.register(new SolidBlockElement(0,5,-1,Material.SANDSTONE));
        structure.register(new SolidBlockElement(0,5,0,Material.SANDSTONE));
        structure.register(new SolidBlockElement(0,5,1,Material.SANDSTONE));
        structure.register(new MultipleFacingBlockElement(0,6,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,true,true));
        structure.register(new SolidBlockElement(0,6,0,Material.OAK_PLANKS));
        structure.register(new MultipleFacingBlockElement(0,6,1,Material.WHITE_STAINED_GLASS_PANE,true,false,true,true));
        structure.register(new MultipleFacingBlockElement(0,7,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,true,true));
        structure.register(new SolidBlockElement(0,7,0,Material.OAK_PLANKS));
        structure.register(new MultipleFacingBlockElement(0,7,1,Material.WHITE_STAINED_GLASS_PANE,true,false,true,true));
        structure.register(new SolidBlockElement(0,8,-1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(0,8,0,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(0,8,1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(1,1,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,1,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,1,1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,2,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,2,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,2,1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,3,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,3,0,Material.SANDSTONE));
        structure.register(new SolidBlockElement(1,3,1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,4,-1,Material.SANDSTONE));
        structure.register(new SolidBlockElement(1,4,0,Material.SANDSTONE));
        structure.register(new SolidBlockElement(1,4,1,Material.SANDSTONE));
        structure.register(new MultipleFacingBlockElement(1,5,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,true,false));
        structure.register(new SolidBlockElement(1,5,0,Material.SANDSTONE));
        structure.register(new MultipleFacingBlockElement(1,5,1,Material.WHITE_STAINED_GLASS_PANE,true,false,true,false));
        structure.register(new MultipleFacingBlockElement(1,6,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,true,false));
        structure.register(new SolidBlockElement(1,6,0,Material.OAK_PLANKS));
        structure.register(new MultipleFacingBlockElement(1,6,1,Material.WHITE_STAINED_GLASS_PANE,true,false,true,false));
        structure.register(new MultipleFacingBlockElement(1,7,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,true,false));
        structure.register(new MultipleFacingBlockElement(1,7,0,Material.WHITE_STAINED_GLASS_PANE,true,true,true,false));
        structure.register(new MultipleFacingBlockElement(1,7,1,Material.WHITE_STAINED_GLASS_PANE,true,false,true,false));
        structure.register(new SolidBlockElement(1,8,0,Material.OAK_PLANKS));
        LV1CrossbowTower = structure;
        return structure;
    }

    private static TowerStructure LV2CrossbowTower;
    private static TowerStructure LV2CrossbowTower() {
        if (LV2CrossbowTower != null) return LV2CrossbowTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-1,1,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,1,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,1,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,2,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,2,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,2,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,3,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,3,0,Material.SANDSTONE));
        structure.register(new SolidBlockElement(-1,3,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,4,-1,Material.SANDSTONE));
        structure.register(new SolidBlockElement(-1,4,0,Material.SANDSTONE));
        structure.register(new SolidBlockElement(-1,4,1,Material.SANDSTONE));
        structure.register(new MultipleFacingBlockElement(-1,5,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,false,true));
        structure.register(new SolidBlockElement(-1,5,0,Material.SANDSTONE));
        structure.register(new MultipleFacingBlockElement(-1,5,1,Material.WHITE_STAINED_GLASS_PANE,true,false,false,true));
        structure.register(new MultipleFacingBlockElement(-1,6,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,false,true));
        structure.register(new SolidBlockElement(-1,6,0,Material.POLISHED_ANDESITE));
        structure.register(new MultipleFacingBlockElement(-1,6,1,Material.WHITE_STAINED_GLASS_PANE,true,false,false,true));
        structure.register(new MultipleFacingBlockElement(-1,7,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,false,true));
        structure.register(new MultipleFacingBlockElement(-1,7,0,Material.WHITE_STAINED_GLASS_PANE,true,true,false,true));
        structure.register(new MultipleFacingBlockElement(-1,7,1,Material.WHITE_STAINED_GLASS_PANE,true,false,false,true));
        structure.register(new SolidBlockElement(-1,8,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,1,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,1,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,1,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,2,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,2,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,2,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,3,-1,Material.SANDSTONE));
        structure.register(new SolidBlockElement(0,3,0,Material.SANDSTONE));
        structure.register(new SolidBlockElement(0,3,1,Material.SANDSTONE));
        structure.register(new SolidBlockElement(0,4,-1,Material.SANDSTONE));
        structure.register(new SolidBlockElement(0,4,0,Material.SANDSTONE));
        structure.register(new SolidBlockElement(0,4,1,Material.SANDSTONE));
        structure.register(new SolidBlockElement(0,5,-1,Material.SANDSTONE));
        structure.register(new SolidBlockElement(0,5,0,Material.SANDSTONE));
        structure.register(new SolidBlockElement(0,5,1,Material.SANDSTONE));
        structure.register(new MultipleFacingBlockElement(0,6,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,true,true));
        structure.register(new SolidBlockElement(0,6,0,Material.POLISHED_ANDESITE));
        structure.register(new MultipleFacingBlockElement(0,6,1,Material.WHITE_STAINED_GLASS_PANE,true,false,true,true));
        structure.register(new MultipleFacingBlockElement(0,7,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,true,true));
        structure.register(new SolidBlockElement(0,7,0,Material.POLISHED_ANDESITE));
        structure.register(new MultipleFacingBlockElement(0,7,1,Material.WHITE_STAINED_GLASS_PANE,true,false,true,true));
        structure.register(new SolidBlockElement(0,8,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,8,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,8,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,1,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,1,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,1,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,2,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,2,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,2,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,3,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,3,0,Material.SANDSTONE));
        structure.register(new SolidBlockElement(1,3,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,4,-1,Material.SANDSTONE));
        structure.register(new SolidBlockElement(1,4,0,Material.SANDSTONE));
        structure.register(new SolidBlockElement(1,4,1,Material.SANDSTONE));
        structure.register(new MultipleFacingBlockElement(1,5,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,true,false));
        structure.register(new SolidBlockElement(1,5,0,Material.SANDSTONE));
        structure.register(new MultipleFacingBlockElement(1,5,1,Material.WHITE_STAINED_GLASS_PANE,true,false,true,false));
        structure.register(new MultipleFacingBlockElement(1,6,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,true,false));
        structure.register(new SolidBlockElement(1,6,0,Material.POLISHED_ANDESITE));
        structure.register(new MultipleFacingBlockElement(1,6,1,Material.WHITE_STAINED_GLASS_PANE,true,false,true,false));
        structure.register(new MultipleFacingBlockElement(1,7,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,true,false));
        structure.register(new MultipleFacingBlockElement(1,7,0,Material.WHITE_STAINED_GLASS_PANE,true,true,true,false));
        structure.register(new MultipleFacingBlockElement(1,7,1,Material.WHITE_STAINED_GLASS_PANE,true,false,true,false));
        structure.register(new SolidBlockElement(1,8,0,Material.POLISHED_ANDESITE));
        LV2CrossbowTower = structure;
        return structure;
    }

    private static TowerStructure LV3CrossbowTower;
    private static TowerStructure LV3CrossbowTower() {
        if (LV3CrossbowTower != null) return LV3CrossbowTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-1,1,-1,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,1,0,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,1,1,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,2,-1,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,2,0,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,2,1,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,3,-1,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,3,0,Material.ORANGE_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,3,1,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,4,-1,Material.ORANGE_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,4,0,Material.ORANGE_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,4,1,Material.ORANGE_TERRACOTTA));
        structure.register(new MultipleFacingBlockElement(-1,5,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,false,true));
        structure.register(new SolidBlockElement(-1,5,0,Material.ORANGE_TERRACOTTA));
        structure.register(new MultipleFacingBlockElement(-1,5,1,Material.WHITE_STAINED_GLASS_PANE,true,false,false,true));
        structure.register(new MultipleFacingBlockElement(-1,6,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,false,true));
        structure.register(new SolidBlockElement(-1,6,0,Material.YELLOW_TERRACOTTA));
        structure.register(new MultipleFacingBlockElement(-1,6,1,Material.WHITE_STAINED_GLASS_PANE,true,false,false,true));
        structure.register(new MultipleFacingBlockElement(-1,7,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,false,true));
        structure.register(new MultipleFacingBlockElement(-1,7,0,Material.WHITE_STAINED_GLASS_PANE,true,true,false,true));
        structure.register(new MultipleFacingBlockElement(-1,7,1,Material.WHITE_STAINED_GLASS_PANE,true,false,false,true));
        structure.register(new SolidBlockElement(-1,8,0,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(0,1,-1,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(0,1,0,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(0,1,1,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(0,2,-1,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(0,2,0,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(0,2,1,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(0,3,-1,Material.ORANGE_TERRACOTTA));
        structure.register(new SolidBlockElement(0,3,0,Material.ORANGE_TERRACOTTA));
        structure.register(new SolidBlockElement(0,3,1,Material.ORANGE_TERRACOTTA));
        structure.register(new SolidBlockElement(0,4,-1,Material.ORANGE_TERRACOTTA));
        structure.register(new SolidBlockElement(0,4,0,Material.ORANGE_TERRACOTTA));
        structure.register(new SolidBlockElement(0,4,1,Material.ORANGE_TERRACOTTA));
        structure.register(new SolidBlockElement(0,5,-1,Material.ORANGE_TERRACOTTA));
        structure.register(new SolidBlockElement(0,5,0,Material.ORANGE_TERRACOTTA));
        structure.register(new SolidBlockElement(0,5,1,Material.ORANGE_TERRACOTTA));
        structure.register(new MultipleFacingBlockElement(0,6,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,true,true));
        structure.register(new SolidBlockElement(0,6,0,Material.YELLOW_TERRACOTTA));
        structure.register(new MultipleFacingBlockElement(0,6,1,Material.WHITE_STAINED_GLASS_PANE,true,false,true,true));
        structure.register(new MultipleFacingBlockElement(0,7,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,true,true));
        structure.register(new SolidBlockElement(0,7,0,Material.YELLOW_TERRACOTTA));
        structure.register(new MultipleFacingBlockElement(0,7,1,Material.WHITE_STAINED_GLASS_PANE,true,false,true,true));
        structure.register(new SolidBlockElement(0,8,-1,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(0,8,0,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(0,8,1,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(1,1,-1,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(1,1,0,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(1,1,1,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(1,2,-1,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(1,2,0,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(1,2,1,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(1,3,-1,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(1,3,0,Material.ORANGE_TERRACOTTA));
        structure.register(new SolidBlockElement(1,3,1,Material.BLUE_TERRACOTTA));
        structure.register(new SolidBlockElement(1,4,-1,Material.ORANGE_TERRACOTTA));
        structure.register(new SolidBlockElement(1,4,0,Material.ORANGE_TERRACOTTA));
        structure.register(new SolidBlockElement(1,4,1,Material.ORANGE_TERRACOTTA));
        structure.register(new MultipleFacingBlockElement(1,5,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,true,false));
        structure.register(new SolidBlockElement(1,5,0,Material.ORANGE_TERRACOTTA));
        structure.register(new MultipleFacingBlockElement(1,5,1,Material.WHITE_STAINED_GLASS_PANE,true,false,true,false));
        structure.register(new MultipleFacingBlockElement(1,6,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,true,false));
        structure.register(new SolidBlockElement(1,6,0,Material.YELLOW_TERRACOTTA));
        structure.register(new MultipleFacingBlockElement(1,6,1,Material.WHITE_STAINED_GLASS_PANE,true,false,true,false));
        structure.register(new MultipleFacingBlockElement(1,7,-1,Material.WHITE_STAINED_GLASS_PANE,false,true,true,false));
        structure.register(new MultipleFacingBlockElement(1,7,0,Material.WHITE_STAINED_GLASS_PANE,true,true,true,false));
        structure.register(new MultipleFacingBlockElement(1,7,1,Material.WHITE_STAINED_GLASS_PANE,true,false,true,false));
        structure.register(new SolidBlockElement(1,8,0,Material.YELLOW_TERRACOTTA));
        LV3CrossbowTower = structure;
        return structure;
    }

    private static TowerStructure LV1LongbowTower;
    private static TowerStructure LV1LongbowTower() {
        if (LV1LongbowTower != null) return LV1LongbowTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-1,1,-1,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(-1,1,0,Material.OAK_FENCE,true,true,false,true));
        structure.register(new SolidBlockElement(-1,1,1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1,2,-1,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(-1,2,0,Material.OAK_FENCE,true,true,false,true));
        structure.register(new SolidBlockElement(-1,2,1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1,3,-1,Material.PETRIFIED_OAK_SLAB));
        structure.register(new SolidBlockElement(-1,3,0,Material.PETRIFIED_OAK_SLAB));
        structure.register(new SolidBlockElement(-1,3,1,Material.PETRIFIED_OAK_SLAB));
        structure.register(new StairsBlockElement(-1,4,-1,Material.COBBLESTONE_STAIRS,BlockFace.EAST,Bisected.Half.TOP,Stairs.Shape.OUTER_RIGHT));
        structure.register(new StairsBlockElement(-1,4,0,Material.COBBLESTONE_STAIRS,BlockFace.EAST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(-1,4,1,Material.COBBLESTONE_STAIRS,BlockFace.NORTH,Bisected.Half.TOP,Stairs.Shape.OUTER_RIGHT));
        structure.register(new SolidBlockElement(-1,5,-1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1,5,0,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(-1,5,1,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(-1,6,-1,Material.OAK_FENCE,false,true,false,true));
        structure.register(new MultipleFacingBlockElement(-1,6,0,Material.OAK_FENCE,true,true,false,false));
        structure.register(new MultipleFacingBlockElement(-1,6,1,Material.OAK_FENCE,true,false,false,true));
        structure.register(new SolidBlockElement(-1,7,-1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(-1,7,1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(-1,8,-1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(-1,8,0,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(-1,8,1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(-1,9,0,Material.OAK_PLANKS));
        structure.register(new MultipleFacingBlockElement(0,1,-1,Material.OAK_FENCE,false,true,true,true));
        structure.register(new SolidBlockElement(0,1,0,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(0,1,1,Material.OAK_FENCE,true,false,true,true));
        structure.register(new MultipleFacingBlockElement(0,2,-1,Material.OAK_FENCE,false,true,true,true));
        structure.register(new SolidBlockElement(0,2,0,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(0,2,1,Material.OAK_FENCE,true,false,true,true));
        structure.register(new SolidBlockElement(0,3,-1,Material.PETRIFIED_OAK_SLAB));
        structure.register(new SolidBlockElement(0,3,0,Material.OAK_LOG));
        structure.register(new SolidBlockElement(0,3,1,Material.PETRIFIED_OAK_SLAB));
        structure.register(new StairsBlockElement(0,4,-1,Material.COBBLESTONE_STAIRS,BlockFace.SOUTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0,4,0,Material.OAK_LOG));
        structure.register(new StairsBlockElement(0,4,1,Material.COBBLESTONE_STAIRS,BlockFace.NORTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0,5,-1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(0,5,0,Material.OAK_LOG));
        structure.register(new SolidBlockElement(0,5,1,Material.OAK_PLANKS));
        structure.register(new MultipleFacingBlockElement(0,6,-1,Material.OAK_FENCE,false,false,true,true));
        structure.register(new MultipleFacingBlockElement(0,6,1,Material.OAK_FENCE,false,false,true,true));
        structure.register(new SolidBlockElement(0,8,-1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(0,8,1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(0,9,-1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(0,9,0,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(0,9,1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(1,1,-1,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(1,1,0,Material.OAK_FENCE,true,true,true,false));
        structure.register(new SolidBlockElement(1,1,1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(1,2,-1,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(1,2,0,Material.OAK_FENCE,true,true,true,false));
        structure.register(new SolidBlockElement(1,2,1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(1,3,-1,Material.PETRIFIED_OAK_SLAB));
        structure.register(new SolidBlockElement(1,3,0,Material.PETRIFIED_OAK_SLAB));
        structure.register(new SolidBlockElement(1,3,1,Material.PETRIFIED_OAK_SLAB));
        structure.register(new StairsBlockElement(1,4,-1,Material.COBBLESTONE_STAIRS,BlockFace.WEST,Bisected.Half.TOP,Stairs.Shape.OUTER_LEFT));
        structure.register(new StairsBlockElement(1,4,0,Material.COBBLESTONE_STAIRS,BlockFace.WEST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(1,4,1,Material.COBBLESTONE_STAIRS,BlockFace.WEST,Bisected.Half.TOP,Stairs.Shape.OUTER_RIGHT));
        structure.register(new SolidBlockElement(1,5,-1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(1,5,0,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(1,5,1,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(1,6,-1,Material.OAK_FENCE,false,true,true,false));
        structure.register(new MultipleFacingBlockElement(1,6,0,Material.OAK_FENCE,true,true,false,false));
        structure.register(new MultipleFacingBlockElement(1,6,1,Material.OAK_FENCE,true,false,true,false));
        structure.register(new SolidBlockElement(1,7,-1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(1,7,1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(1,8,-1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(1,8,0,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(1,8,1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(1,9,0,Material.OAK_PLANKS));
        LV1LongbowTower = structure;
        return structure;
    }

    private static TowerStructure LV2LongbowTower;
    private static TowerStructure LV2LongbowTower() {
        if (LV2LongbowTower != null) return LV2LongbowTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-1,1,-1,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(-1,1,0,Material.OAK_FENCE,true,true,false,true));
        structure.register(new SolidBlockElement(-1,1,1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1,2,-1,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(-1,2,0,Material.OAK_FENCE,true,true,false,true));
        structure.register(new SolidBlockElement(-1,2,1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1,3,-1,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(-1,3,0,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(-1,3,1,Material.STONE_BRICK_SLAB));
        structure.register(new StairsBlockElement(-1,4,-1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.EAST,Bisected.Half.TOP,Stairs.Shape.OUTER_RIGHT));
        structure.register(new StairsBlockElement(-1,4,0,Material.POLISHED_ANDESITE_STAIRS,BlockFace.EAST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(-1,4,1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.NORTH,Bisected.Half.TOP,Stairs.Shape.OUTER_RIGHT));
        structure.register(new SolidBlockElement(-1,5,-1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1,5,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,5,1,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(-1,6,-1,Material.OAK_FENCE,false,true,false,true));
        structure.register(new MultipleFacingBlockElement(-1,6,0,Material.OAK_FENCE,true,true,false,false));
        structure.register(new MultipleFacingBlockElement(-1,6,1,Material.OAK_FENCE,true,false,false,true));
        structure.register(new SolidBlockElement(-1,7,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,7,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,8,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,8,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,8,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,9,0,Material.POLISHED_ANDESITE));
        structure.register(new MultipleFacingBlockElement(0,1,-1,Material.OAK_FENCE,false,true,true,true));
        structure.register(new SolidBlockElement(0,1,0,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(0,1,1,Material.OAK_FENCE,true,false,true,true));
        structure.register(new MultipleFacingBlockElement(0,2,-1,Material.OAK_FENCE,false,true,true,true));
        structure.register(new SolidBlockElement(0,2,0,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(0,2,1,Material.OAK_FENCE,true,false,true,true));
        structure.register(new SolidBlockElement(0,3,-1,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(0,3,0,Material.OAK_LOG));
        structure.register(new SolidBlockElement(0,3,1,Material.STONE_BRICK_SLAB));
        structure.register(new StairsBlockElement(0,4,-1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.SOUTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0,4,0,Material.OAK_LOG));
        structure.register(new StairsBlockElement(0,4,1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.NORTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0,5,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,5,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,5,1,Material.POLISHED_ANDESITE));
        structure.register(new MultipleFacingBlockElement(0,6,-1,Material.OAK_FENCE,false,false,true,true));
        structure.register(new MultipleFacingBlockElement(0,6,1,Material.OAK_FENCE,false,false,true,true));
        structure.register(new SolidBlockElement(0,8,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,8,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,8,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,9,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,9,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(0,9,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,1,-1,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(1,1,0,Material.OAK_FENCE,true,true,true,false));
        structure.register(new SolidBlockElement(1,1,1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(1,2,-1,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(1,2,0,Material.OAK_FENCE,true,true,true,false));
        structure.register(new SolidBlockElement(1,2,1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(1,3,-1,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(1,3,0,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(1,3,1,Material.STONE_BRICK_SLAB));
        structure.register(new StairsBlockElement(1,4,-1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.SOUTH,Bisected.Half.TOP,Stairs.Shape.OUTER_RIGHT));
        structure.register(new StairsBlockElement(1,4,0,Material.POLISHED_ANDESITE_STAIRS,BlockFace.WEST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(1,4,1,Material.POLISHED_ANDESITE_STAIRS,BlockFace.NORTH,Bisected.Half.TOP,Stairs.Shape.OUTER_LEFT));
        structure.register(new SolidBlockElement(1,5,-1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(1,5,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,5,1,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(1,6,-1,Material.OAK_FENCE,false,true,true,false));
        structure.register(new MultipleFacingBlockElement(1,6,0,Material.OAK_FENCE,true,true,false,false));
        structure.register(new MultipleFacingBlockElement(1,6,1,Material.OAK_FENCE,true,false,true,false));
        structure.register(new SolidBlockElement(1,7,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,7,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,8,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,8,0,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,8,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,9,0,Material.POLISHED_ANDESITE));
        LV2LongbowTower = structure;
        return structure;
    }

    private static TowerStructure LV3LongbowTower;
    private static TowerStructure LV3LongbowTower() {
        if (LV3LongbowTower != null) return LV3LongbowTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-1,1,-1,Material.END_STONE));
        structure.register(new DirectionalBlockElement(-1,1,0,Material.END_ROD,BlockFace.UP));
        structure.register(new SolidBlockElement(-1,1,1,Material.END_STONE));
        structure.register(new SolidBlockElement(-1,2,-1,Material.END_STONE));
        structure.register(new DirectionalBlockElement(-1,2,0,Material.END_ROD,BlockFace.DOWN));
        structure.register(new SolidBlockElement(-1,2,1,Material.END_STONE));
        structure.register(new SolidBlockElement(-1,3,-1,Material.END_STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(-1,3,0,Material.END_STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(-1,3,1,Material.END_STONE_BRICK_SLAB));
        structure.register(new StairsBlockElement(-1,4,-1,Material.END_STONE_BRICK_STAIRS,BlockFace.EAST,Bisected.Half.TOP,Stairs.Shape.OUTER_RIGHT));
        structure.register(new StairsBlockElement(-1,4,0,Material.END_STONE_BRICK_STAIRS,BlockFace.EAST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(-1,4,1,Material.END_STONE_BRICK_STAIRS,BlockFace.EAST,Bisected.Half.TOP,Stairs.Shape.OUTER_LEFT));
        structure.register(new SolidBlockElement(-1,5,-1,Material.END_STONE));
        structure.register(new SolidBlockElement(-1,5,0,Material.OBSIDIAN));
        structure.register(new SolidBlockElement(-1,5,1,Material.END_STONE));
        structure.register(new DirectionalBlockElement(-1,6,-1,Material.END_ROD,BlockFace.UP));
        structure.register(new SolidBlockElement(-1,6,0,Material.END_STONE_BRICK_SLAB));
        structure.register(new DirectionalBlockElement(-1,6,1,Material.END_ROD,BlockFace.UP));
        structure.register(new SolidBlockElement(-1,7,-1,Material.OBSIDIAN));
        structure.register(new SolidBlockElement(-1,7,1,Material.OBSIDIAN));
        structure.register(new SolidBlockElement(-1,8,-1,Material.OBSIDIAN));
        structure.register(new SolidBlockElement(-1,8,0,Material.OBSIDIAN));
        structure.register(new SolidBlockElement(-1,8,1,Material.OBSIDIAN));
        structure.register(new SolidBlockElement(-1,9,0,Material.CRYING_OBSIDIAN));
        structure.register(new MultipleFacingBlockElement(0,1,-1,Material.OAK_FENCE,false,true,true,true));
        structure.register(new SolidBlockElement(0,1,0,Material.END_STONE));
        structure.register(new DirectionalBlockElement(0,1,1,Material.END_ROD,BlockFace.UP));
        structure.register(new MultipleFacingBlockElement(0,2,-1,Material.OAK_FENCE,false,true,true,true));
        structure.register(new SolidBlockElement(0,2,0,Material.END_STONE));
        structure.register(new DirectionalBlockElement(0,2,1,Material.END_ROD,BlockFace.DOWN));
        structure.register(new SolidBlockElement(0,3,-1,Material.END_STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(0,3,0,Material.END_STONE));
        structure.register(new SolidBlockElement(0,3,1,Material.END_STONE_BRICK_SLAB));
        structure.register(new StairsBlockElement(0,4,-1,Material.END_STONE_BRICK_STAIRS,BlockFace.SOUTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0,4,0,Material.END_STONE));
        structure.register(new StairsBlockElement(0,4,1,Material.END_STONE_BRICK_STAIRS,BlockFace.NORTH,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new SolidBlockElement(0,5,-1,Material.OBSIDIAN));
        structure.register(new SolidBlockElement(0,5,0,Material.END_STONE));
        structure.register(new SolidBlockElement(0,5,1,Material.CRYING_OBSIDIAN));
        structure.register(new SolidBlockElement(0,6,-1,Material.END_STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(0,6,1,Material.END_STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(0,8,-1,Material.OBSIDIAN));
        structure.register(new SolidBlockElement(0,8,1,Material.OBSIDIAN));
        structure.register(new SolidBlockElement(0,9,-1,Material.CRYING_OBSIDIAN));
        structure.register(new SolidBlockElement(0,9,0,Material.OBSIDIAN));
        structure.register(new SolidBlockElement(0,9,1,Material.OBSIDIAN));
        structure.register(new SolidBlockElement(1,1,-1,Material.END_STONE));
        structure.register(new MultipleFacingBlockElement(1,1,0,Material.OAK_FENCE,true,true,true,false));
        structure.register(new SolidBlockElement(1,1,1,Material.END_STONE));
        structure.register(new SolidBlockElement(1,2,-1,Material.END_STONE));
        structure.register(new MultipleFacingBlockElement(1,2,0,Material.OAK_FENCE,true,true,true,false));
        structure.register(new SolidBlockElement(1,2,1,Material.END_STONE));
        structure.register(new SolidBlockElement(1,3,-1,Material.END_STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(1,3,0,Material.END_STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(1,3,1,Material.END_STONE_BRICK_SLAB));
        structure.register(new StairsBlockElement(1,4,-1,Material.END_STONE_BRICK_STAIRS,BlockFace.SOUTH,Bisected.Half.TOP,Stairs.Shape.OUTER_RIGHT));
        structure.register(new StairsBlockElement(1,4,0,Material.END_STONE_BRICK_STAIRS,BlockFace.WEST,Bisected.Half.TOP,Stairs.Shape.STRAIGHT));
        structure.register(new StairsBlockElement(1,4,1,Material.END_STONE_BRICK_STAIRS,BlockFace.NORTH,Bisected.Half.TOP,Stairs.Shape.OUTER_LEFT));
        structure.register(new SolidBlockElement(1,5,-1,Material.END_STONE));
        structure.register(new SolidBlockElement(1,5,0,Material.CRYING_OBSIDIAN));
        structure.register(new SolidBlockElement(1,5,1,Material.END_STONE));
        structure.register(new DirectionalBlockElement(1,6,-1,Material.END_ROD,BlockFace.UP));
        structure.register(new SolidBlockElement(1,6,0,Material.END_STONE_BRICK_SLAB));
        structure.register(new DirectionalBlockElement(1,6,1,Material.END_ROD,BlockFace.UP));
        structure.register(new SolidBlockElement(1,7,-1,Material.CRYING_OBSIDIAN));
        structure.register(new SolidBlockElement(1,7,1,Material.OBSIDIAN));
        structure.register(new SolidBlockElement(1,8,-1,Material.OBSIDIAN));
        structure.register(new SolidBlockElement(1,8,0,Material.OBSIDIAN));
        structure.register(new SolidBlockElement(1,8,1,Material.CRYING_OBSIDIAN));
        structure.register(new SolidBlockElement(1,9,0,Material.OBSIDIAN));
        LV3LongbowTower = structure;
        return structure;
    }

    private static TowerStructure LV1SniperTower;
    private static TowerStructure LV1SniperTower() {
        if (LV1SniperTower != null) return LV1SniperTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-2,1,-2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-2,1,2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-2,2,-2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-2,2,2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-2,3,-2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-2,3,2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-2,4,-2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-2,4,-1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-2,4,0,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-2,4,1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-2,4,2,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(-2,5,-1,Material.OAK_FENCE,false,false,false,true));
        structure.register(new MultipleFacingBlockElement(-2,5,1,Material.OAK_FENCE,false,false,false,true));
        structure.register(new MultipleFacingBlockElement(-2,6,-1,Material.OAK_FENCE,false,false,false,true));
        structure.register(new MultipleFacingBlockElement(-2,6,1,Material.OAK_FENCE,false,false,false,true));
        structure.register(new MultipleFacingBlockElement(-2,7,-1,Material.OAK_FENCE,false,false,false,true));
        structure.register(new MultipleFacingBlockElement(-2,7,1,Material.OAK_FENCE,false,false,false,true));
        structure.register(new SolidBlockElement(-2,8,-1,Material.COBBLESTONE_SLAB));
        structure.register(new SolidBlockElement(-2,8,1,Material.COBBLESTONE_SLAB));
        structure.register(new SolidBlockElement(-1,4,-2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1,4,-1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(-1,4,0,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(-1,4,1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(-1,4,2,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(-1,5,-2,Material.OAK_FENCE,false,true,false,false));
        structure.register(new SolidBlockElement(-1,5,-1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1,5,1,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(-1,5,2,Material.OAK_FENCE,true,false,false,false));
        structure.register(new MultipleFacingBlockElement(-1,6,-2,Material.OAK_FENCE,false,true,false,false));
        structure.register(new SolidBlockElement(-1,6,-1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(-1,6,1,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(-1,6,2,Material.OAK_FENCE,true,false,false,false));
        structure.register(new MultipleFacingBlockElement(-1,7,-2,Material.OAK_FENCE,false,true,false,false));
        structure.register(new SolidBlockElement(-1,7,-1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(-1,7,0,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(-1,7,1,Material.OAK_PLANKS));
        structure.register(new MultipleFacingBlockElement(-1,7,2,Material.OAK_FENCE,true,false,false,false));
        structure.register(new SolidBlockElement(-1,8,-2,Material.COBBLESTONE_SLAB));
        structure.register(new SolidBlockElement(-1,8,-1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(-1,8,0,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(-1,8,1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(-1,8,2,Material.COBBLESTONE_SLAB));
        structure.register(new MultipleFacingBlockElement(-1,9,-1,Material.OAK_FENCE,false,false,false,false));
        structure.register(new MultipleFacingBlockElement(-1,9,1,Material.OAK_FENCE,false,false,false,false));
        structure.register(new SolidBlockElement(-1,10,-1,Material.COBBLESTONE_SLAB));
        structure.register(new SolidBlockElement(-1,10,0,Material.COBBLESTONE_SLAB));
        structure.register(new SolidBlockElement(-1,10,1,Material.COBBLESTONE_SLAB));
        structure.register(new SolidBlockElement(0,1,-1,Material.OAK_PLANKS));
        structure.register(new DirectionalBlockElement(0,1,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,2,-1,Material.OAK_PLANKS));
        structure.register(new DirectionalBlockElement(0,2,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,3,-1,Material.OAK_PLANKS));
        structure.register(new DirectionalBlockElement(0,3,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,4,-2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(0,4,-1,Material.OAK_PLANKS));
        structure.register(new DirectionalBlockElement(0,4,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,4,1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(0,4,2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(0,5,-1,Material.OAK_PLANKS));
        structure.register(new DirectionalBlockElement(0,5,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,6,-1,Material.OAK_PLANKS));
        structure.register(new DirectionalBlockElement(0,6,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,7,-1,Material.OAK_PLANKS));
        structure.register(new DirectionalBlockElement(0,7,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,7,1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(0,8,-1,Material.OAK_PLANKS));
        structure.register(new DirectionalBlockElement(0,8,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,8,1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(0,10,-1,Material.COBBLESTONE_SLAB));
        structure.register(new SolidBlockElement(0,10,0,Material.COBBLESTONE_SLAB));
        structure.register(new SolidBlockElement(0,10,1,Material.COBBLESTONE_SLAB));
        structure.register(new SolidBlockElement(1,4,-2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(1,4,-1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(1,4,0,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(1,4,1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(1,4,2,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(1,5,-2,Material.OAK_FENCE,false,true,false,false));
        structure.register(new SolidBlockElement(1,5,-1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(1,5,1,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(1,5,2,Material.OAK_FENCE,true,false,false,false));
        structure.register(new MultipleFacingBlockElement(1,6,-2,Material.OAK_FENCE,false,true,false,false));
        structure.register(new SolidBlockElement(1,6,-1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(1,6,1,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(1,6,2,Material.OAK_FENCE,true,false,false,false));
        structure.register(new MultipleFacingBlockElement(1,7,-2,Material.OAK_FENCE,false,true,false,false));
        structure.register(new SolidBlockElement(1,7,-1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(1,7,0,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(1,7,1,Material.OAK_PLANKS));
        structure.register(new MultipleFacingBlockElement(1,7,2,Material.OAK_FENCE,true,false,false,false));
        structure.register(new SolidBlockElement(1,8,-2,Material.COBBLESTONE_SLAB));
        structure.register(new SolidBlockElement(1,8,-1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(1,8,0,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(1,8,1,Material.OAK_PLANKS));
        structure.register(new SolidBlockElement(1,8,2,Material.COBBLESTONE_SLAB));
        structure.register(new MultipleFacingBlockElement(1,9,-1,Material.OAK_FENCE,false,false,false,false));
        structure.register(new MultipleFacingBlockElement(1,9,1,Material.OAK_FENCE,false,false,false,false));
        structure.register(new SolidBlockElement(1,10,-1,Material.COBBLESTONE_SLAB));
        structure.register(new SolidBlockElement(1,10,0,Material.COBBLESTONE_SLAB));
        structure.register(new SolidBlockElement(1,10,1,Material.COBBLESTONE_SLAB));
        structure.register(new SolidBlockElement(2,1,-2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(2,1,2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(2,2,-2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(2,2,2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(2,3,-2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(2,3,2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(2,4,-2,Material.OAK_LOG));
        structure.register(new SolidBlockElement(2,4,-1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(2,4,0,Material.OAK_LOG));
        structure.register(new SolidBlockElement(2,4,1,Material.OAK_LOG));
        structure.register(new SolidBlockElement(2,4,2,Material.OAK_LOG));
        structure.register(new MultipleFacingBlockElement(2,5,-1,Material.OAK_FENCE,false,false,true,false));
        structure.register(new MultipleFacingBlockElement(2,5,1,Material.OAK_FENCE,false,false,true,false));
        structure.register(new MultipleFacingBlockElement(2,6,-1,Material.OAK_FENCE,false,false,true,false));
        structure.register(new MultipleFacingBlockElement(2,6,1,Material.OAK_FENCE,false,false,true,false));
        structure.register(new MultipleFacingBlockElement(2,7,-1,Material.OAK_FENCE,false,false,true,false));
        structure.register(new MultipleFacingBlockElement(2,7,1,Material.OAK_FENCE,false,false,true,false));
        structure.register(new SolidBlockElement(2,8,-1,Material.COBBLESTONE_SLAB));
        structure.register(new SolidBlockElement(2,8,1,Material.COBBLESTONE_SLAB));
        LV1SniperTower = structure;
        return structure;
    }

    private static TowerStructure LV2SniperTower;
    private static TowerStructure LV2SniperTower() {
        if (LV2SniperTower != null) return LV2SniperTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-2,1,-2,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-2,1,2,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-2,2,-2,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-2,2,2,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-2,3,-2,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-2,3,2,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-2,4,-2,Material.CHISELED_STONE_BRICKS));
        structure.register(new SolidBlockElement(-2,4,-1,Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2,4,0,Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2,4,1,Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-2,4,2,Material.CHISELED_STONE_BRICKS));
        structure.register(new SolidBlockElement(-2,5,-1,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(-2,5,1,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(-2,6,-1,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(-2,6,1,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(-2,7,-1,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(-2,7,1,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(-2,8,-1,Material.STONE_BRICK_SLAB));
        structure.register(new DirectionalBlockElement(-2,8,0,Material.GREEN_WALL_BANNER,BlockFace.WEST));
        structure.register(new SolidBlockElement(-2,8,1,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(-1,4,-2,Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1,4,-1,Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1,4,0,Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1,4,1,Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1,4,2,Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(-1,5,-2,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(-1,5,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,5,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,5,2,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(-1,6,-2,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(-1,6,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,6,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,6,2,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(-1,7,-2,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(-1,7,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(-1,7,0,Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1,7,1,Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(-1,7,2,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(-1,8,-2,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(-1,8,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,8,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,8,1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(-1,8,2,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(-1,9,-1,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(-1,9,1,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(-1,10,-1,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(-1,10,0,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(-1,10,1,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(0,1,-1,Material.COBBLESTONE));
        structure.register(new DirectionalBlockElement(0,1,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,2,-1,Material.COBBLESTONE));
        structure.register(new DirectionalBlockElement(0,2,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,3,-1,Material.COBBLESTONE));
        structure.register(new DirectionalBlockElement(0,3,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,4,-2,Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0,4,-1,Material.COBBLESTONE));
        structure.register(new DirectionalBlockElement(0,4,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,4,1,Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(0,4,2,Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(0,5,-1,Material.COBBLESTONE));
        structure.register(new DirectionalBlockElement(0,5,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,6,-1,Material.COBBLESTONE));
        structure.register(new DirectionalBlockElement(0,6,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,7,-1,Material.COBBLESTONE));
        structure.register(new DirectionalBlockElement(0,7,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,7,1,Material.STONE_BRICKS));
        structure.register(new DirectionalBlockElement(0,8,-2,Material.GREEN_WALL_BANNER,BlockFace.NORTH));
        structure.register(new SolidBlockElement(0,8,-1,Material.COBBLESTONE));
        structure.register(new DirectionalBlockElement(0,8,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,8,1,Material.COBBLESTONE));
        structure.register(new DirectionalBlockElement(0,8,2,Material.GREEN_WALL_BANNER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,10,-1,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(0,10,0,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(0,10,1,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(1,4,-2,Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1,4,-1,Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1,4,0,Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1,4,1,Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1,4,2,Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(1,5,-2,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(1,5,-1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,5,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,5,2,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(1,6,-2,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(1,6,-1,Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1,6,1,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(1,6,2,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(1,7,-2,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(1,7,-1,Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1,7,0,Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1,7,1,Material.STONE_BRICKS));
        structure.register(new SolidBlockElement(1,7,2,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(1,8,-2,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(1,8,-1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,8,0,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,8,1,Material.COBBLESTONE));
        structure.register(new SolidBlockElement(1,8,2,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(1,9,-1,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(1,9,1,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(1,10,-1,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(1,10,0,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(1,10,1,Material.STONE_BRICK_SLAB));
        structure.register(new SolidBlockElement(2,1,-2,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(2,1,2,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(2,2,-2,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(2,2,2,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(2,3,-2,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(2,3,2,Material.POLISHED_ANDESITE));
        structure.register(new SolidBlockElement(2,4,-2,Material.CHISELED_STONE_BRICKS));
        structure.register(new SolidBlockElement(2,4,-1,Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2,4,0,Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2,4,1,Material.SMOOTH_STONE));
        structure.register(new SolidBlockElement(2,4,2,Material.CHISELED_STONE_BRICKS));
        structure.register(new SolidBlockElement(2,5,-1,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(2,5,1,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(2,6,-1,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(2,6,1,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(2,7,-1,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(2,7,1,Material.POLISHED_BLACKSTONE_WALL));
        structure.register(new SolidBlockElement(2,8,-1,Material.STONE_BRICK_SLAB));
        structure.register(new DirectionalBlockElement(2,8,0,Material.GREEN_WALL_BANNER,BlockFace.EAST));
        structure.register(new SolidBlockElement(2,8,1,Material.STONE_BRICK_SLAB));
        LV2SniperTower = structure;
        return structure;
    }

    private static TowerStructure LV3SniperTower;
    private static TowerStructure LV3SniperTower() {
        if (LV3SniperTower != null) return LV3SniperTower;
        TowerStructure structure = new TowerStructure();
        structure.register(new SolidBlockElement(-2,1,-2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(-2,1,2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(-2,2,-2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(-2,2,2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(-2,3,-2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(-2,3,2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(-2,4,-2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(-2,4,-1,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(-2,4,0,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(-2,4,1,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(-2,4,2,Material.BLACK_TERRACOTTA));
        structure.register(new DirectionalBlockElement(-2,5,-1,Material.END_ROD,BlockFace.UP));
        structure.register(new DirectionalBlockElement(-2,5,1,Material.END_ROD,BlockFace.UP));
        structure.register(new DirectionalBlockElement(-2,6,-1,Material.END_ROD,BlockFace.DOWN));
        structure.register(new DirectionalBlockElement(-2,6,1,Material.END_ROD,BlockFace.DOWN));
        structure.register(new DirectionalBlockElement(-2,7,-1,Material.END_ROD,BlockFace.UP));
        structure.register(new DirectionalBlockElement(-2,7,1,Material.END_ROD,BlockFace.UP));
        structure.register(new SolidBlockElement(-2,8,-1,Material.SMOOTH_QUARTZ_SLAB));
        structure.register(new DirectionalBlockElement(-2,8,0,Material.GREEN_WALL_BANNER,BlockFace.WEST));
        structure.register(new SolidBlockElement(-2,8,1,Material.SMOOTH_QUARTZ_SLAB));
        structure.register(new SolidBlockElement(-1,4,-2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,4,-1,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,4,0,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,4,1,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,4,2,Material.BLACK_TERRACOTTA));
        structure.register(new DirectionalBlockElement(-1,5,-2,Material.END_ROD,BlockFace.UP));
        structure.register(new SolidBlockElement(-1,5,-1,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,5,0,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,5,1,Material.BLACK_TERRACOTTA));
        structure.register(new DirectionalBlockElement(-1,5,2,Material.END_ROD,BlockFace.UP));
        structure.register(new DirectionalBlockElement(-1,6,-2,Material.END_ROD,BlockFace.DOWN));
        structure.register(new SolidBlockElement(-1,6,-1,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,6,0,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,6,1,Material.BLACK_TERRACOTTA));
        structure.register(new DirectionalBlockElement(-1,6,2,Material.END_ROD,BlockFace.DOWN));
        structure.register(new DirectionalBlockElement(-1,7,-2,Material.END_ROD,BlockFace.UP));
        structure.register(new SolidBlockElement(-1,7,-1,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,7,0,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,7,1,Material.YELLOW_TERRACOTTA));
        structure.register(new DirectionalBlockElement(-1,7,2,Material.END_ROD,BlockFace.UP));
        structure.register(new SolidBlockElement(-1,8,-2,Material.SMOOTH_QUARTZ_SLAB));
        structure.register(new SolidBlockElement(-1,8,-1,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,8,0,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,8,1,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(-1,8,2,Material.SMOOTH_QUARTZ_SLAB));
        structure.register(new DirectionalBlockElement(-1,9,-1,Material.END_ROD,BlockFace.UP));
        structure.register(new DirectionalBlockElement(-1,9,1,Material.END_ROD,BlockFace.UP));
        structure.register(new SolidBlockElement(-1,10,-1,Material.QUARTZ_SLAB));
        structure.register(new SolidBlockElement(-1,10,0,Material.QUARTZ_SLAB));
        structure.register(new SolidBlockElement(-1,10,1,Material.QUARTZ_SLAB));
        structure.register(new SolidBlockElement(0,1,-1,Material.YELLOW_TERRACOTTA));
        structure.register(new DirectionalBlockElement(0,1,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,2,-1,Material.YELLOW_TERRACOTTA));
        structure.register(new DirectionalBlockElement(0,2,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,3,-1,Material.YELLOW_TERRACOTTA));
        structure.register(new DirectionalBlockElement(0,3,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,4,-2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(0,4,-1,Material.YELLOW_TERRACOTTA));
        structure.register(new DirectionalBlockElement(0,4,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,4,1,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(0,4,2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(0,5,-1,Material.YELLOW_TERRACOTTA));
        structure.register(new DirectionalBlockElement(0,5,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,5,1,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(0,6,-1,Material.YELLOW_TERRACOTTA));
        structure.register(new DirectionalBlockElement(0,6,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,6,1,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(0,7,-1,Material.YELLOW_TERRACOTTA));
        structure.register(new DirectionalBlockElement(0,7,0,Material.LADDER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,7,1,Material.YELLOW_TERRACOTTA));
        structure.register(new DirectionalBlockElement(0,8,-2,Material.GREEN_WALL_BANNER,BlockFace.NORTH));
        structure.register(new SolidBlockElement(0,8,-1,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(0,8,1,Material.YELLOW_TERRACOTTA));
        structure.register(new DirectionalBlockElement(0,8,2,Material.GREEN_WALL_BANNER,BlockFace.SOUTH));
        structure.register(new SolidBlockElement(0,10,-1,Material.QUARTZ_SLAB));
        structure.register(new SolidBlockElement(0,10,0,Material.QUARTZ_SLAB));
        structure.register(new SolidBlockElement(0,10,1,Material.QUARTZ_SLAB));
        structure.register(new SolidBlockElement(1,4,-2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(1,4,-1,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(1,4,0,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(1,4,1,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(1,4,2,Material.BLACK_TERRACOTTA));
        structure.register(new DirectionalBlockElement(1,5,-2,Material.END_ROD,BlockFace.UP));
        structure.register(new SolidBlockElement(1,5,-1,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(1,5,0,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(1,5,1,Material.BLACK_TERRACOTTA));
        structure.register(new DirectionalBlockElement(1,5,2,Material.END_ROD,BlockFace.UP));
        structure.register(new DirectionalBlockElement(1,6,-2,Material.END_ROD,BlockFace.DOWN));
        structure.register(new SolidBlockElement(1,6,-1,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(1,6,0,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(1,6,1,Material.BLACK_TERRACOTTA));
        structure.register(new DirectionalBlockElement(1,6,2,Material.END_ROD,BlockFace.DOWN));
        structure.register(new DirectionalBlockElement(1,7,-2,Material.END_ROD,BlockFace.UP));
        structure.register(new SolidBlockElement(1,7,-1,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(1,7,0,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(1,7,1,Material.YELLOW_TERRACOTTA));
        structure.register(new DirectionalBlockElement(1,7,2,Material.END_ROD,BlockFace.UP));
        structure.register(new SolidBlockElement(1,8,-2,Material.SMOOTH_QUARTZ_SLAB));
        structure.register(new SolidBlockElement(1,8,-1,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(1,8,0,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(1,8,1,Material.YELLOW_TERRACOTTA));
        structure.register(new SolidBlockElement(1,8,2,Material.SMOOTH_QUARTZ_SLAB));
        structure.register(new DirectionalBlockElement(1,9,-1,Material.END_ROD,BlockFace.UP));
        structure.register(new DirectionalBlockElement(1,9,1,Material.END_ROD,BlockFace.UP));
        structure.register(new SolidBlockElement(1,10,-1,Material.QUARTZ_SLAB));
        structure.register(new SolidBlockElement(1,10,0,Material.QUARTZ_SLAB));
        structure.register(new SolidBlockElement(1,10,1,Material.QUARTZ_SLAB));
        structure.register(new SolidBlockElement(2,1,-2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(2,1,2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(2,2,-2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(2,2,2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(2,3,-2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(2,3,2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(2,4,-2,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(2,4,-1,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(2,4,0,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(2,4,1,Material.BLACK_TERRACOTTA));
        structure.register(new SolidBlockElement(2,4,2,Material.BLACK_TERRACOTTA));
        structure.register(new DirectionalBlockElement(2,5,-1,Material.END_ROD,BlockFace.UP));
        structure.register(new DirectionalBlockElement(2,5,1,Material.END_ROD,BlockFace.UP));
        structure.register(new DirectionalBlockElement(2,6,-1,Material.END_ROD,BlockFace.DOWN));
        structure.register(new DirectionalBlockElement(2,6,1,Material.END_ROD,BlockFace.DOWN));
        structure.register(new DirectionalBlockElement(2,7,-1,Material.END_ROD,BlockFace.UP));
        structure.register(new DirectionalBlockElement(2,7,1,Material.END_ROD,BlockFace.UP));
        structure.register(new SolidBlockElement(2,8,-1,Material.SMOOTH_QUARTZ_SLAB));
        structure.register(new DirectionalBlockElement(2,8,0,Material.GREEN_WALL_BANNER,BlockFace.EAST));
        structure.register(new SolidBlockElement(2,8,1,Material.SMOOTH_QUARTZ_SLAB));
        LV3SniperTower = structure;
        return structure;
    }


}
